"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/jobs/route";
exports.ids = ["app/api/jobs/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fjobs%2Froute&page=%2Fapi%2Fjobs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fjobs%2Froute.ts&appDir=%2FUsers%2Frohanramachandruni%2Fresumebuilder%2Fskill-job-resume%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frohanramachandruni%2Fresumebuilder%2Fskill-job-resume&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fjobs%2Froute&page=%2Fapi%2Fjobs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fjobs%2Froute.ts&appDir=%2FUsers%2Frohanramachandruni%2Fresumebuilder%2Fskill-job-resume%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frohanramachandruni%2Fresumebuilder%2Fskill-job-resume&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_rohanramachandruni_resumebuilder_skill_job_resume_src_app_api_jobs_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/jobs/route.ts */ \"(rsc)/./src/app/api/jobs/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/jobs/route\",\n        pathname: \"/api/jobs\",\n        filename: \"route\",\n        bundlePath: \"app/api/jobs/route\"\n    },\n    resolvedPagePath: \"/Users/rohanramachandruni/resumebuilder/skill-job-resume/src/app/api/jobs/route.ts\",\n    nextConfigOutput,\n    userland: _Users_rohanramachandruni_resumebuilder_skill_job_resume_src_app_api_jobs_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/jobs/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZqb2JzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZqb2JzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGam9icyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnJvaGFucmFtYWNoYW5kcnVuaSUyRnJlc3VtZWJ1aWxkZXIlMkZza2lsbC1qb2ItcmVzdW1lJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnJvaGFucmFtYWNoYW5kcnVuaSUyRnJlc3VtZWJ1aWxkZXIlMkZza2lsbC1qb2ItcmVzdW1lJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNrQztBQUMvRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2NhcmVlcmJvb3N0LW5leHRqcy8/MGFiOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvcm9oYW5yYW1hY2hhbmRydW5pL3Jlc3VtZWJ1aWxkZXIvc2tpbGwtam9iLXJlc3VtZS9zcmMvYXBwL2FwaS9qb2JzL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9qb2JzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvam9ic1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvam9icy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9yb2hhbnJhbWFjaGFuZHJ1bmkvcmVzdW1lYnVpbGRlci9za2lsbC1qb2ItcmVzdW1lL3NyYy9hcHAvYXBpL2pvYnMvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2pvYnMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fjobs%2Froute&page=%2Fapi%2Fjobs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fjobs%2Froute.ts&appDir=%2FUsers%2Frohanramachandruni%2Fresumebuilder%2Fskill-job-resume%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frohanramachandruni%2Fresumebuilder%2Fskill-job-resume&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/jobs/route.ts":
/*!***********************************!*\
  !*** ./src/app/api/jobs/route.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_job_search__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/job-search */ \"(rsc)/./src/lib/job-search.ts\");\n// app/api/jobs/route.ts\n\n\nasync function POST(req) {\n    const { resume, companies, limit } = await req.json();\n    const r = resume || {};\n    const jobs = await (0,_lib_job_search__WEBPACK_IMPORTED_MODULE_1__.searchJobsForResume)(r, {\n        companies,\n        limit\n    });\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        jobs\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9qb2JzL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHdCQUF3QjtBQUNtQjtBQUN5QjtBQUU3RCxlQUFlRSxLQUFLQyxHQUFZO0lBQ3JDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxTQUFTLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1ILElBQUlJLElBQUk7SUFDbkQsTUFBTUMsSUFBS0osVUFBVSxDQUFDO0lBQ3RCLE1BQU1LLE9BQU8sTUFBTVIsb0VBQW1CQSxDQUFDTyxHQUFHO1FBQUVIO1FBQVdDO0lBQU07SUFDN0QsT0FBT04scURBQVlBLENBQUNPLElBQUksQ0FBQztRQUFFRTtJQUFLO0FBQ2xDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FyZWVyYm9vc3QtbmV4dGpzLy4vc3JjL2FwcC9hcGkvam9icy9yb3V0ZS50cz85ODVhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGFwcC9hcGkvam9icy9yb3V0ZS50c1xuaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSBcIm5leHQvc2VydmVyXCI7XG5pbXBvcnQgeyBzZWFyY2hKb2JzRm9yUmVzdW1lLCB0eXBlIFJlc3VtZSB9IGZyb20gXCJAL2xpYi9qb2Itc2VhcmNoXCI7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcTogUmVxdWVzdCkge1xuICBjb25zdCB7IHJlc3VtZSwgY29tcGFuaWVzLCBsaW1pdCB9ID0gYXdhaXQgcmVxLmpzb24oKTtcbiAgY29uc3QgciA9IChyZXN1bWUgfHwge30pIGFzIFJlc3VtZTtcbiAgY29uc3Qgam9icyA9IGF3YWl0IHNlYXJjaEpvYnNGb3JSZXN1bWUociwgeyBjb21wYW5pZXMsIGxpbWl0IH0pO1xuICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBqb2JzIH0pO1xufVxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsInNlYXJjaEpvYnNGb3JSZXN1bWUiLCJQT1NUIiwicmVxIiwicmVzdW1lIiwiY29tcGFuaWVzIiwibGltaXQiLCJqc29uIiwiciIsImpvYnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/jobs/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/job-search.ts":
/*!*******************************!*\
  !*** ./src/lib/job-search.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   searchJobsForResume: () => (/* binding */ searchJobsForResume)\n/* harmony export */ });\n// lib/job-search.ts\nconst GREENHOUSE_COMPANIES = {\n    coursera: \"coursera\",\n    stripe: \"stripe\"\n};\nconst LEVER_COMPANIES = {};\nconst REMOTEOK_ENDPOINT = \"https://remoteok.com/api\";\nconst stripHtml = (h)=>h.replace(/<[^>]*>/g, \" \").replace(/\\s+/g, \" \").trim();\nconst tokenize = (s)=>(s || \"\").toLowerCase().replace(/[^a-z0-9+.#/\\- ]+/g, \" \").split(/\\s+/).filter(Boolean);\nconst unique = (a)=>Array.from(new Set(a));\nconst jaccard = (a, b)=>{\n    const A = new Set(a), B = new Set(b);\n    const inter = [\n        ...A\n    ].filter((x)=>B.has(x)).length;\n    const uni = new Set([\n        ...a,\n        ...b\n    ]).size;\n    return uni === 0 ? 0 : inter / uni;\n};\nfunction hasRemoteInMetadata(obj) {\n    return JSON.stringify(obj || {}).toLowerCase().includes(\"remote\");\n}\nfunction extractTagsFromGreenhouse(j) {\n    const dept = j?.departments?.map((d)=>d?.name) || [];\n    const off = j?.offices?.map((o)=>o?.name) || [];\n    const title = (j?.title || \"\").split(/[ /|,]+/).slice(0, 5);\n    return unique([\n        ...dept,\n        ...off,\n        ...title\n    ].filter(Boolean));\n}\nfunction summarizeGreenhouseContent(j) {\n    return stripHtml(String(j?.content || \"\")).slice(0, 280);\n}\nfunction extractTagsFromLever(p) {\n    const cat = p?.categories || {};\n    const bits = [\n        cat.commitment,\n        cat.team,\n        cat.location,\n        p?.tags?.join(\" \")\n    ].filter(Boolean).join(\" \");\n    return unique(tokenize(bits).slice(0, 12));\n}\nfunction summarizeLeverContent(p) {\n    const desc = stripHtml(String(p?.lists?.map((l)=>l?.text).join(\" \") || p?.description || \"\"));\n    return desc.slice(0, 280);\n}\nfunction normalizeJob(j) {\n    return {\n        id: j.id,\n        title: j.title?.trim() || \"\",\n        company: j.company?.trim() || \"\",\n        location: j.location?.trim() || \"\",\n        remote: !!j.remote,\n        tags: unique((j.tags || []).map((t)=>String(t).trim()).filter(Boolean)),\n        summary: (j.summary || \"\").trim(),\n        url: j.url || \"\"\n    };\n}\nfunction dedupe(jobs) {\n    const m = new Map();\n    for (const j of jobs){\n        const k = `${j.company.toLowerCase()}::${j.title.toLowerCase()}::${(j.location || \"\").toLowerCase()}`;\n        if (!m.has(k)) m.set(k, j);\n    }\n    return [\n        ...m.values()\n    ];\n}\nasync function fetchRemoteOK() {\n    try {\n        console.log(\"\\uD83C\\uDF10 Fetching from RemoteOK...\");\n        const res = await fetch(REMOTEOK_ENDPOINT, {\n            headers: {\n                \"User-Agent\": \"job-matcher/1.0\"\n            }\n        });\n        if (!res.ok) throw new Error(`RemoteOK ${res.status}`);\n        const data = await res.json();\n        if (!Array.isArray(data)) return [];\n        const jobs = data.filter((d)=>d?.id && d?.position && d?.company).map((d)=>({\n                id: `remoteok_${d.id}`,\n                title: d.position,\n                company: d.company,\n                location: d.location || (d?.remote ? \"Remote\" : \"\"),\n                remote: Boolean(d.remote) || String(d.location || \"\").toLowerCase().includes(\"remote\"),\n                tags: Array.isArray(d.tags) ? d.tags : [],\n                summary: d.description ? stripHtml(String(d.description)).slice(0, 280) : \"\",\n                url: d.url || d.apply_url || d.slug || \"\"\n            }));\n        console.log(`✅ RemoteOK: ${jobs.length} jobs`);\n        return jobs;\n    } catch (error) {\n        console.log(`❌ RemoteOK failed:`, error);\n        return [];\n    }\n}\nasync function fetchGreenhouse(slug) {\n    try {\n        console.log(`🏢 Fetching from Greenhouse (${slug})...`);\n        const res = await fetch(`https://boards-api.greenhouse.io/v1/boards/${encodeURIComponent(slug)}/jobs`, {\n            headers: {\n                \"User-Agent\": \"job-matcher/1.0\"\n            }\n        });\n        if (!res.ok) throw new Error(`GH ${slug} ${res.status}`);\n        const data = await res.json();\n        const jobs = Array.isArray(data?.jobs) ? data.jobs : [];\n        const result = jobs.map((j)=>({\n                id: `greenhouse_${slug}_${j.id}`,\n                title: j.title || \"\",\n                company: slug,\n                location: j?.location?.name || \"\",\n                remote: /remote/i.test(j?.location?.name || \"\") || hasRemoteInMetadata(j),\n                tags: extractTagsFromGreenhouse(j),\n                summary: summarizeGreenhouseContent(j),\n                url: j.absolute_url || `https://boards.greenhouse.io/${slug}/jobs/${j.id}`\n            }));\n        console.log(`✅ Greenhouse (${slug}): ${result.length} jobs`);\n        return result;\n    } catch (error) {\n        console.log(`❌ Greenhouse (${slug}) failed:`, error);\n        return [];\n    }\n}\nasync function fetchLever(slug) {\n    try {\n        const res = await fetch(`https://api.lever.co/v0/postings/${encodeURIComponent(slug)}?mode=json`, {\n            headers: {\n                \"User-Agent\": \"job-matcher/1.0\"\n            }\n        });\n        if (!res.ok) throw new Error(`Lever ${slug} ${res.status}`);\n        const data = await res.json();\n        if (!Array.isArray(data)) return [];\n        return data.map((p)=>({\n                id: `lever_${slug}_${p.id}`,\n                title: p.text || p.title || \"\",\n                company: p?.categories?.team || slug,\n                location: p?.categories?.location || \"\",\n                remote: /remote/i.test(p?.categories?.location || \"\") || hasRemoteInMetadata(p),\n                tags: extractTagsFromLever(p),\n                summary: summarizeLeverContent(p),\n                url: p.hostedUrl || p.applyUrl || \"\"\n            }));\n    } catch  {\n        return [];\n    }\n}\nfunction scoreJobAgainstResume(job, resume) {\n    const skill = unique((resume.skills || []).flatMap(tokenize));\n    const title = unique((resume.titles || []).flatMap(tokenize));\n    const domain = unique((resume.domains || []).flatMap(tokenize));\n    const jt = unique([\n        ...tokenize(job.title),\n        ...tokenize(job.company),\n        ...job.tags.flatMap(tokenize),\n        ...tokenize(job.summary)\n    ]);\n    let s = 0;\n    s += 0.6 * jaccard(skill, jt);\n    s += 0.25 * jaccard(title, jt);\n    s += 0.15 * jaccard(domain, jt);\n    if (resume.openToRemote && job.remote) s += 0.05;\n    if (!resume.openToRemote && resume.preferredLocations?.length) {\n        const hit = resume.preferredLocations.some((l)=>(job.location || \"\").toLowerCase().includes(l.toLowerCase()));\n        if (hit) s += 0.05;\n    }\n    if (!job.remote && resume.preferredLocations?.length) {\n        const miss = !resume.preferredLocations.some((l)=>(job.location || \"\").toLowerCase().includes(l.toLowerCase()));\n        if (miss) s -= 0.05;\n    }\n    return s;\n}\nasync function searchJobsForResume(resume, opts = {}) {\n    const limit = opts.limit ?? 50;\n    const batches = [\n        fetchRemoteOK()\n    ];\n    for (const slug of Object.values(GREENHOUSE_COMPANIES))batches.push(fetchGreenhouse(slug));\n    for (const slug of Object.values(LEVER_COMPANIES))batches.push(fetchLever(slug));\n    console.log(`🔍 Fetching jobs from ${batches.length} sources...`);\n    const fetched = opts.offlineSeed ? [\n        opts.offlineSeed\n    ] : await Promise.allSettled(batches);\n    if (!opts.offlineSeed) {\n        const results = fetched;\n        results.forEach((result, index)=>{\n            if (result.status === \"fulfilled\") {\n                console.log(`✅ Source ${index}: ${result.value.length} jobs`);\n            } else {\n                console.log(`❌ Source ${index} failed:`, result.reason);\n            }\n        });\n    }\n    const successfulResults = opts.offlineSeed ? fetched : fetched.filter((result)=>result.status === \"fulfilled\").map((result)=>result.value);\n    const all = dedupe(successfulResults.flat()).map(normalizeJob);\n    console.log(`📊 Total unique jobs after deduplication: ${all.length}`);\n    const scored = all.map((j)=>({\n            j,\n            s: scoreJobAgainstResume(j, resume)\n        }));\n    const sorted = scored.sort((a, b)=>b.s - a.s);\n    console.log(`🏆 Top 5 scores:`, sorted.slice(0, 5).map(({ j, s })=>`${j.title} (${s.toFixed(3)})`));\n    return sorted.slice(0, limit).map(({ j })=>j);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/job-search.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fjobs%2Froute&page=%2Fapi%2Fjobs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fjobs%2Froute.ts&appDir=%2FUsers%2Frohanramachandruni%2Fresumebuilder%2Fskill-job-resume%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frohanramachandruni%2Fresumebuilder%2Fskill-job-resume&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();