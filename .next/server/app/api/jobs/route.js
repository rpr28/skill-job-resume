"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/jobs/route";
exports.ids = ["app/api/jobs/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fjobs%2Froute&page=%2Fapi%2Fjobs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fjobs%2Froute.js&appDir=%2FUsers%2Frohanramachandruni%2Fresumebuilder%2Fskill-job-resume%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frohanramachandruni%2Fresumebuilder%2Fskill-job-resume&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fjobs%2Froute&page=%2Fapi%2Fjobs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fjobs%2Froute.js&appDir=%2FUsers%2Frohanramachandruni%2Fresumebuilder%2Fskill-job-resume%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frohanramachandruni%2Fresumebuilder%2Fskill-job-resume&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_rohanramachandruni_resumebuilder_skill_job_resume_src_app_api_jobs_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/jobs/route.js */ \"(rsc)/./src/app/api/jobs/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/jobs/route\",\n        pathname: \"/api/jobs\",\n        filename: \"route\",\n        bundlePath: \"app/api/jobs/route\"\n    },\n    resolvedPagePath: \"/Users/rohanramachandruni/resumebuilder/skill-job-resume/src/app/api/jobs/route.js\",\n    nextConfigOutput,\n    userland: _Users_rohanramachandruni_resumebuilder_skill_job_resume_src_app_api_jobs_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/jobs/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZqb2JzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZqb2JzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGam9icyUyRnJvdXRlLmpzJmFwcERpcj0lMkZVc2VycyUyRnJvaGFucmFtYWNoYW5kcnVuaSUyRnJlc3VtZWJ1aWxkZXIlMkZza2lsbC1qb2ItcmVzdW1lJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRnJvaGFucmFtYWNoYW5kcnVuaSUyRnJlc3VtZWJ1aWxkZXIlMkZza2lsbC1qb2ItcmVzdW1lJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNrQztBQUMvRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2NhcmVlcmJvb3N0LW5leHRqcy8/ZDJhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvcm9oYW5yYW1hY2hhbmRydW5pL3Jlc3VtZWJ1aWxkZXIvc2tpbGwtam9iLXJlc3VtZS9zcmMvYXBwL2FwaS9qb2JzL3JvdXRlLmpzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9qb2JzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvam9ic1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvam9icy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9yb2hhbnJhbWFjaGFuZHJ1bmkvcmVzdW1lYnVpbGRlci9za2lsbC1qb2ItcmVzdW1lL3NyYy9hcHAvYXBpL2pvYnMvcm91dGUuanNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2pvYnMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fjobs%2Froute&page=%2Fapi%2Fjobs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fjobs%2Froute.js&appDir=%2FUsers%2Frohanramachandruni%2Fresumebuilder%2Fskill-job-resume%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frohanramachandruni%2Fresumebuilder%2Fskill-job-resume&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/jobs/route.js":
/*!***********************************!*\
  !*** ./src/app/api/jobs/route.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_redis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/redis */ \"(rsc)/./src/lib/redis.js\");\n/* harmony import */ var _lib_job_search__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../lib/job-search */ \"(rsc)/./src/lib/job-search.js\");\n/* harmony import */ var _lib_jobs_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../lib/jobs/utils */ \"(rsc)/./src/lib/jobs/utils.js\");\n// app/api/jobs/route.js\n\n\n\n\n// Project job to minimal fields for pagination\nfunction project(job) {\n    return {\n        id: job.id,\n        title: job.title,\n        company: job.company,\n        location: job.location || \"\",\n        remote: Boolean(job.remote),\n        tags: (job.tags || []).filter((t)=>/^[a-z0-9.+#/\\- ]{2,}$/i.test(t)).slice(0, 5),\n        url: job.url || \"\"\n    };\n}\n// Sample jobs for fallback\nconst SAMPLE_JOBS = [\n    {\n        id: \"sample_1\",\n        title: \"Senior React Developer\",\n        company: \"TechCorp\",\n        location: \"San Francisco, CA\",\n        remote: true,\n        tags: [\n            \"react\",\n            \"javascript\",\n            \"typescript\"\n        ],\n        summary: \"We're looking for a senior React developer to join our team.\",\n        url: \"https://example.com/job1\",\n        employmentType: \"Full-time\",\n        source: \"sample\",\n        postedAt: \"2025-01-13\"\n    },\n    {\n        id: \"sample_2\",\n        title: \"Frontend Engineer\",\n        company: \"StartupXYZ\",\n        location: \"Remote\",\n        remote: true,\n        tags: [\n            \"react\",\n            \"vue\",\n            \"frontend\"\n        ],\n        summary: \"Join our growing team as a frontend engineer.\",\n        url: \"https://example.com/job2\",\n        employmentType: \"Full-time\",\n        source: \"sample\",\n        postedAt: \"2025-01-12\"\n    },\n    {\n        id: \"sample_3\",\n        title: \"Full Stack Developer\",\n        company: \"BigTech Inc\",\n        location: \"New York, NY\",\n        remote: false,\n        tags: [\n            \"react\",\n            \"node\",\n            \"python\"\n        ],\n        summary: \"Full stack role with React and Node.js experience required.\",\n        url: \"https://example.com/job3\",\n        employmentType: \"Full-time\",\n        source: \"sample\",\n        postedAt: \"2025-01-11\"\n    },\n    {\n        id: \"sample_4\",\n        title: \"DevOps Engineer\",\n        company: \"CloudTech\",\n        location: \"Austin, TX\",\n        remote: true,\n        tags: [\n            \"aws\",\n            \"docker\",\n            \"kubernetes\"\n        ],\n        summary: \"Join our DevOps team to build scalable infrastructure.\",\n        url: \"https://example.com/job4\",\n        employmentType: \"Full-time\",\n        source: \"sample\",\n        postedAt: \"2025-01-10\"\n    },\n    {\n        id: \"sample_5\",\n        title: \"Data Scientist\",\n        company: \"AnalyticsPro\",\n        location: \"Boston, MA\",\n        remote: false,\n        tags: [\n            \"python\",\n            \"machine learning\",\n            \"sql\"\n        ],\n        summary: \"Help us build predictive models and insights.\",\n        url: \"https://example.com/job5\",\n        employmentType: \"Full-time\",\n        source: \"sample\",\n        postedAt: \"2025-01-09\"\n    },\n    {\n        id: \"sample_6\",\n        title: \"Product Manager\",\n        company: \"InnovateCorp\",\n        location: \"Seattle, WA\",\n        remote: true,\n        tags: [\n            \"product\",\n            \"agile\",\n            \"user experience\"\n        ],\n        summary: \"Lead product strategy and development.\",\n        url: \"https://example.com/job6\",\n        employmentType: \"Full-time\",\n        source: \"sample\",\n        postedAt: \"2025-01-08\"\n    },\n    {\n        id: \"sample_7\",\n        title: \"UX Designer\",\n        company: \"DesignStudio\",\n        location: \"Los Angeles, CA\",\n        remote: true,\n        tags: [\n            \"design\",\n            \"figma\",\n            \"user research\"\n        ],\n        summary: \"Create beautiful and intuitive user experiences.\",\n        url: \"https://example.com/job7\",\n        employmentType: \"Full-time\",\n        source: \"sample\",\n        postedAt: \"2025-01-07\"\n    },\n    {\n        id: \"sample_8\",\n        title: \"Backend Engineer\",\n        company: \"APITech\",\n        location: \"Denver, CO\",\n        remote: false,\n        tags: [\n            \"node\",\n            \"postgres\",\n            \"redis\"\n        ],\n        summary: \"Build robust backend services and APIs.\",\n        url: \"https://example.com/job8\",\n        employmentType: \"Full-time\",\n        source: \"sample\",\n        postedAt: \"2025-01-06\"\n    }\n];\n// Filter and rank jobs\nfunction filterAndRankJobs(jobs, { q, locations, remote, tags, companies, employmentType, resume, start = 0, limit = 20 }) {\n    let filtered = jobs;\n    // Text search\n    if (q && q.trim()) {\n        const query = q.toLowerCase();\n        filtered = filtered.filter((job)=>job.title.toLowerCase().includes(query) || job.company.toLowerCase().includes(query) || job.summary.toLowerCase().includes(query) || job.tags.some((tag)=>tag.toLowerCase().includes(query)));\n    }\n    // Location filter\n    if (locations && locations.length > 0) {\n        filtered = filtered.filter((job)=>locations.some((loc)=>job.location.toLowerCase().includes(loc.toLowerCase())));\n    }\n    // Remote filter\n    if (remote && remote !== \"all\") {\n        if (remote === \"remote\") {\n            filtered = filtered.filter((job)=>job.remote);\n        } else if (remote === \"onsite\") {\n            filtered = filtered.filter((job)=>!job.remote);\n        }\n    }\n    // Tags filter\n    if (tags && tags.length > 0) {\n        filtered = filtered.filter((job)=>tags.some((tag)=>job.tags.some((jobTag)=>jobTag.toLowerCase().includes(tag.toLowerCase()))));\n    }\n    // Companies filter\n    if (companies && companies.length > 0) {\n        filtered = filtered.filter((job)=>companies.some((company)=>job.company.toLowerCase().includes(company.toLowerCase())));\n    }\n    // Employment type filter\n    if (employmentType && employmentType.length > 0) {\n        filtered = filtered.filter((job)=>employmentType.some((type)=>job.employmentType.toLowerCase().includes(type.toLowerCase())));\n    }\n    // Score jobs if resume provided\n    if (resume) {\n        filtered = filtered.map((job)=>{\n            const score = scoreJobAgainstResume(job, resume);\n            return {\n                ...job,\n                score\n            };\n        }).sort((a, b)=>(b.score || 0) - (a.score || 0));\n    }\n    const total = filtered.length;\n    const items = filtered.slice(start, start + limit);\n    const nextCursor = start + limit < total ? Buffer.from(String(start + limit)).toString(\"base64\") : null;\n    return {\n        items,\n        nextCursor,\n        total\n    };\n}\n// Score job against resume (simplified version)\nfunction scoreJobAgainstResume(job, resume) {\n    const skill = (0,_lib_jobs_utils__WEBPACK_IMPORTED_MODULE_3__.unique)((resume.skills || []).flatMap(_lib_jobs_utils__WEBPACK_IMPORTED_MODULE_3__.tokenize));\n    const title = (0,_lib_jobs_utils__WEBPACK_IMPORTED_MODULE_3__.unique)((resume.titles || []).flatMap(_lib_jobs_utils__WEBPACK_IMPORTED_MODULE_3__.tokenize));\n    const domain = (0,_lib_jobs_utils__WEBPACK_IMPORTED_MODULE_3__.unique)((resume.domains || []).flatMap(_lib_jobs_utils__WEBPACK_IMPORTED_MODULE_3__.tokenize));\n    const jt = (0,_lib_jobs_utils__WEBPACK_IMPORTED_MODULE_3__.unique)([\n        ...(0,_lib_jobs_utils__WEBPACK_IMPORTED_MODULE_3__.tokenize)(job.title),\n        ...(0,_lib_jobs_utils__WEBPACK_IMPORTED_MODULE_3__.tokenize)(job.company),\n        ...job.tags.flatMap(_lib_jobs_utils__WEBPACK_IMPORTED_MODULE_3__.tokenize),\n        ...(0,_lib_jobs_utils__WEBPACK_IMPORTED_MODULE_3__.tokenize)(job.summary)\n    ]);\n    let s = 0;\n    s += 0.6 * jaccard(skill, jt);\n    s += 0.25 * jaccard(title, jt);\n    s += 0.15 * jaccard(domain, jt);\n    if (resume.openToRemote && job.remote) s += 0.05;\n    return s;\n}\n// Jaccard similarity\nfunction jaccard(a, b) {\n    const A = new Set(a), B = new Set(b);\n    const inter = [\n        ...A\n    ].filter((x)=>B.has(x)).length;\n    const uni = new Set([\n        ...a,\n        ...b\n    ]).size;\n    return uni === 0 ? 0 : inter / uni;\n}\nasync function GET(req) {\n    try {\n        const { searchParams } = new URL(req.url);\n        const q = searchParams.get(\"q\") || \"\";\n        const location = searchParams.get(\"location\") || \"all\";\n        const remote = searchParams.get(\"remote\") || \"all\";\n        const page = Math.max(1, parseInt(searchParams.get(\"page\") || \"1\", 10));\n        const pageSize = Math.min(50, Math.max(1, parseInt(searchParams.get(\"pageSize\") || \"10\", 10)));\n        // Try to get jobs from cache or live aggregation\n        let base = await (0,_lib_redis__WEBPACK_IMPORTED_MODULE_1__.cacheGet)(\"jobs:base:v1\");\n        if (!base || base.length < 10) {\n            try {\n                const result = await (0,_lib_job_search__WEBPACK_IMPORTED_MODULE_2__.aggregateJobs)();\n                base = result.jobs;\n            } catch (error) {\n                console.log(\"Live aggregation failed, using sample data:\", error.message);\n                base = SAMPLE_JOBS;\n            }\n        }\n        // If still no jobs, use sample data\n        if (!base || base.length === 0) {\n            base = SAMPLE_JOBS;\n        }\n        // Apply filters\n        const filtered = base.filter((j)=>{\n            const qOk = q ? (j.title + \" \" + j.company).toLowerCase().includes(q.toLowerCase()) : true;\n            const locOk = location === \"all\" ? true : (j.location || \"\").toLowerCase().includes(location.toLowerCase());\n            const remOk = remote === \"all\" ? true : remote === \"remote\" ? j.remote : !j.remote;\n            return qOk && locOk && remOk;\n        });\n        const total = filtered.length;\n        const totalPages = Math.max(1, Math.ceil(total / pageSize));\n        const start = (page - 1) * pageSize;\n        const end = start + pageSize;\n        const items = filtered.slice(start, end).map(project);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            page,\n            pageSize,\n            total,\n            totalPages,\n            items\n        });\n    } catch (e) {\n        console.error(\"JOBS_API_ERR\", e);\n        // Fallback to sample data on error\n        const page = 1;\n        const pageSize = 10;\n        const items = SAMPLE_JOBS.slice(0, pageSize).map(project);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            page,\n            pageSize,\n            total: SAMPLE_JOBS.length,\n            totalPages: Math.ceil(SAMPLE_JOBS.length / pageSize),\n            items\n        }, {\n            status: 200\n        });\n    }\n}\nasync function POST(req) {\n    try {\n        const body = await req.json();\n        const { q, locations, remote = \"all\", tags, companies, employmentType, limit = 20, cursor, resume } = body;\n        // Try to get jobs from cache or live aggregation\n        let base = await (0,_lib_redis__WEBPACK_IMPORTED_MODULE_1__.cacheGet)(\"jobs:base:v1\");\n        if (!base || base.length < 10) {\n            try {\n                const result = await (0,_lib_job_search__WEBPACK_IMPORTED_MODULE_2__.aggregateJobs)();\n                base = result.jobs;\n            } catch (error) {\n                console.log(\"Live aggregation failed, using sample data:\", error.message);\n                base = SAMPLE_JOBS;\n            }\n        }\n        // If still no jobs, use sample data\n        if (!base || base.length === 0) {\n            base = SAMPLE_JOBS;\n        }\n        const start = cursor ? Number(Buffer.from(cursor, \"base64\").toString()) || 0 : 0;\n        const res = filterAndRankJobs(base, {\n            q,\n            locations,\n            remote,\n            tags,\n            companies,\n            employmentType,\n            resume,\n            start,\n            limit\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            jobs: res.items,\n            nextCursor: res.nextCursor,\n            total: res.total\n        });\n    } catch (e) {\n        console.error(\"JOBS_API_ERR\", e);\n        // Fallback to sample data on error\n        const start = 0;\n        const limit = 20;\n        const slice = SAMPLE_JOBS.slice(start, start + limit);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            jobs: slice,\n            nextCursor: null,\n            total: SAMPLE_JOBS.length\n        }, {\n            status: 200\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/jobs/route.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/job-search.js":
/*!*******************************!*\
  !*** ./src/lib/job-search.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   aggregateJobs: () => (/* binding */ aggregateJobs),\n/* harmony export */   searchJobsForResume: () => (/* binding */ searchJobsForResume),\n/* harmony export */   testCompanySlug: () => (/* binding */ testCompanySlug)\n/* harmony export */ });\n/* harmony import */ var _jobs_sources_remoteok_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jobs/sources/remoteok.js */ \"(rsc)/./src/lib/jobs/sources/remoteok.js\");\n/* harmony import */ var _jobs_sources_greenhouse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jobs/sources/greenhouse.js */ \"(rsc)/./src/lib/jobs/sources/greenhouse.js\");\n/* harmony import */ var _jobs_sources_lever_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jobs/sources/lever.js */ \"(rsc)/./src/lib/jobs/sources/lever.js\");\n/* harmony import */ var _jobs_sources_remotive_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./jobs/sources/remotive.js */ \"(rsc)/./src/lib/jobs/sources/remotive.js\");\n/* harmony import */ var _jobs_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jobs/utils.js */ \"(rsc)/./src/lib/jobs/utils.js\");\n// lib/job-search.js\n\n\n\n\n\n// Fallback job data when APIs fail\nconst FALLBACK_JOBS = [\n    {\n        id: \"fallback_1\",\n        title: \"Senior Frontend Engineer\",\n        company: \"TechCorp\",\n        location: \"San Francisco, CA\",\n        remote: true,\n        tags: [\n            \"React\",\n            \"TypeScript\",\n            \"JavaScript\"\n        ],\n        summary: \"Build scalable frontend applications using modern technologies.\",\n        url: \"https://example.com/job1\"\n    },\n    {\n        id: \"fallback_2\",\n        title: \"Full Stack Developer\",\n        company: \"StartupXYZ\",\n        location: \"Remote\",\n        remote: true,\n        tags: [\n            \"Node.js\",\n            \"React\",\n            \"MongoDB\"\n        ],\n        summary: \"Join our growing team to build innovative web applications.\",\n        url: \"https://example.com/job2\"\n    },\n    {\n        id: \"fallback_3\",\n        title: \"Software Engineer\",\n        company: \"BigTech Inc\",\n        location: \"New York, NY\",\n        remote: false,\n        tags: [\n            \"Python\",\n            \"AWS\",\n            \"Docker\"\n        ],\n        summary: \"Develop backend services and infrastructure for our platform.\",\n        url: \"https://example.com/job3\"\n    }\n];\n// Jaccard similarity\nconst jaccard = (a, b)=>{\n    const A = new Set(a), B = new Set(b);\n    const inter = [\n        ...A\n    ].filter((x)=>B.has(x)).length;\n    const uni = new Set([\n        ...a,\n        ...b\n    ]).size;\n    return uni === 0 ? 0 : inter / uni;\n};\n// Score job against resume\nfunction scoreJobAgainstResume(job, resume) {\n    const skill = (0,_jobs_utils_js__WEBPACK_IMPORTED_MODULE_4__.unique)((resume.skills || []).flatMap(_jobs_utils_js__WEBPACK_IMPORTED_MODULE_4__.tokenize));\n    const title = (0,_jobs_utils_js__WEBPACK_IMPORTED_MODULE_4__.unique)((resume.titles || []).flatMap(_jobs_utils_js__WEBPACK_IMPORTED_MODULE_4__.tokenize));\n    const domain = (0,_jobs_utils_js__WEBPACK_IMPORTED_MODULE_4__.unique)((resume.domains || []).flatMap(_jobs_utils_js__WEBPACK_IMPORTED_MODULE_4__.tokenize));\n    const jt = (0,_jobs_utils_js__WEBPACK_IMPORTED_MODULE_4__.unique)([\n        ...(0,_jobs_utils_js__WEBPACK_IMPORTED_MODULE_4__.tokenize)(job.title),\n        ...(0,_jobs_utils_js__WEBPACK_IMPORTED_MODULE_4__.tokenize)(job.company),\n        ...job.tags.flatMap(_jobs_utils_js__WEBPACK_IMPORTED_MODULE_4__.tokenize),\n        ...(0,_jobs_utils_js__WEBPACK_IMPORTED_MODULE_4__.tokenize)(job.summary)\n    ]);\n    let s = 0;\n    s += 0.6 * jaccard(skill, jt);\n    s += 0.25 * jaccard(title, jt);\n    s += 0.15 * jaccard(domain, jt);\n    if (resume.openToRemote && job.remote) s += 0.05;\n    if (!resume.openToRemote && resume.preferredLocations?.length) {\n        const hit = resume.preferredLocations.some((l)=>(job.location || \"\").toLowerCase().includes(l.toLowerCase()));\n        if (hit) s += 0.05;\n    }\n    if (!job.remote && resume.preferredLocations?.length) {\n        const miss = !resume.preferredLocations.some((l)=>(job.location || \"\").toLowerCase().includes(l.toLowerCase()));\n        if (miss) s -= 0.05;\n    }\n    return s;\n}\n// Helper function to test company slugs\nasync function testCompanySlug(slug) {\n    try {\n        const res = await fetch(`https://boards-api.greenhouse.io/v1/boards/${encodeURIComponent(slug)}/jobs`, {\n            headers: {\n                \"User-Agent\": \"careerboost-job-crawler/1.0\"\n            }\n        });\n        return res.ok;\n    } catch  {\n        return false;\n    }\n}\n// Main job aggregation function\nasync function aggregateJobs({ limit = _jobs_utils_js__WEBPACK_IMPORTED_MODULE_4__.JOB_FETCH.globalLimit } = {}) {\n    console.log(\"\\uD83D\\uDE80 Starting job aggregation...\");\n    const startTime = Date.now();\n    // Fetch from all sources concurrently\n    const sources = [\n        {\n            name: \"RemoteOK\",\n            fn: ()=>(0,_jobs_sources_remoteok_js__WEBPACK_IMPORTED_MODULE_0__.fetchRemoteOK)({\n                    limit: Math.floor(limit / 4)\n                })\n        },\n        {\n            name: \"Remotive\",\n            fn: ()=>(0,_jobs_sources_remotive_js__WEBPACK_IMPORTED_MODULE_3__.fetchRemotive)({\n                    limit: Math.floor(limit / 4)\n                })\n        },\n        {\n            name: \"Greenhouse\",\n            fn: ()=>(0,_jobs_sources_greenhouse_js__WEBPACK_IMPORTED_MODULE_1__.fetchGreenhouseAll)({\n                    limit: Math.floor(limit / 4)\n                })\n        },\n        {\n            name: \"Lever\",\n            fn: ()=>(0,_jobs_sources_lever_js__WEBPACK_IMPORTED_MODULE_2__.fetchLeverAll)({\n                    limit: Math.floor(limit / 4)\n                })\n        }\n    ];\n    const results = await Promise.allSettled(sources.map((source)=>source.fn()));\n    // Process results\n    const sourceStats = {};\n    const allJobs = [];\n    results.forEach((result, index)=>{\n        const sourceName = sources[index].name;\n        if (result.status === \"fulfilled\") {\n            sourceStats[sourceName] = result.value.length;\n            allJobs.push(...result.value);\n            console.log(`✅ ${sourceName}: ${result.value.length} jobs`);\n        } else {\n            sourceStats[sourceName] = 0;\n            console.log(`❌ ${sourceName} failed:`, result.reason);\n        }\n    });\n    console.log(`📊 Raw jobs before deduplication: ${allJobs.length}`);\n    // Deduplicate\n    const uniqueJobs = (0,_jobs_utils_js__WEBPACK_IMPORTED_MODULE_4__.dedupe)(allJobs);\n    console.log(`📊 Total unique jobs after deduplication: ${uniqueJobs.length}`);\n    // Add fallback jobs if we got very few results\n    if (uniqueJobs.length < 50) {\n        console.log(`⚠️ Only ${uniqueJobs.length} jobs found, adding fallback data`);\n        const withFallback = (0,_jobs_utils_js__WEBPACK_IMPORTED_MODULE_4__.dedupe)([\n            ...uniqueJobs,\n            ...FALLBACK_JOBS\n        ]);\n        console.log(`📊 Total with fallback: ${withFallback.length}`);\n    }\n    const duration = Date.now() - startTime;\n    console.log(`⏱️ Job aggregation completed in ${duration}ms`);\n    console.log(`📈 Source breakdown:`, sourceStats);\n    return {\n        jobs: uniqueJobs,\n        stats: {\n            total: uniqueJobs.length,\n            bySource: sourceStats,\n            duration,\n            timestamp: new Date().toISOString()\n        }\n    };\n}\n// Legacy function for backward compatibility\nasync function searchJobsForResume(resume, opts = {}) {\n    const limit = opts.limit ?? 50;\n    console.log(`🔍 Fetching jobs for resume matching...`);\n    const { jobs } = await aggregateJobs({\n        limit: _jobs_utils_js__WEBPACK_IMPORTED_MODULE_4__.JOB_FETCH.globalLimit\n    });\n    if (jobs.length === 0) {\n        console.log(`⚠️ No jobs found, returning fallback`);\n        return FALLBACK_JOBS.slice(0, limit);\n    }\n    console.log(`📊 Scoring ${jobs.length} jobs against resume...`);\n    const scored = jobs.map((j)=>({\n            j,\n            s: scoreJobAgainstResume(j, resume)\n        }));\n    const sorted = scored.sort((a, b)=>b.s - a.s);\n    console.log(`🏆 Top 5 scores:`, sorted.slice(0, 5).map(({ j, s })=>`${j.title} (${s.toFixed(3)})`));\n    return sorted.slice(0, limit).map(({ j })=>j);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/job-search.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/jobs/config.js":
/*!********************************!*\
  !*** ./src/lib/jobs/config.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JOB_FETCH: () => (/* binding */ JOB_FETCH)\n/* harmony export */ });\nconst JOB_FETCH = {\n    concurrency: 8,\n    perSourceLimit: 2000,\n    globalLimit: 5000,\n    backoffBaseMs: 600,\n    backoffMaxMs: 5000,\n    userAgent: \"careerboost-job-crawler/1.0\",\n    timeoutMs: 10000,\n    maxRetries: 3\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2pvYnMvY29uZmlnLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxZQUFZO0lBQ3ZCQyxhQUFhO0lBQ2JDLGdCQUFnQjtJQUNoQkMsYUFBYTtJQUNiQyxlQUFlO0lBQ2ZDLGNBQWM7SUFDZEMsV0FBVztJQUNYQyxXQUFXO0lBQ1hDLFlBQVk7QUFDZCxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FyZWVyYm9vc3QtbmV4dGpzLy4vc3JjL2xpYi9qb2JzL2NvbmZpZy5qcz9kNTY0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBKT0JfRkVUQ0ggPSB7XG4gIGNvbmN1cnJlbmN5OiA4LFxuICBwZXJTb3VyY2VMaW1pdDogMjAwMCwgLy8gc2FmZXR5IG1heCBwZXIgYWRhcHRlclxuICBnbG9iYWxMaW1pdDogNTAwMCwgICAgLy8gc2FmZXR5IG1heCBwZXIgcnVuXG4gIGJhY2tvZmZCYXNlTXM6IDYwMCxcbiAgYmFja29mZk1heE1zOiA1MDAwLFxuICB1c2VyQWdlbnQ6IFwiY2FyZWVyYm9vc3Qtam9iLWNyYXdsZXIvMS4wXCIsXG4gIHRpbWVvdXRNczogMTAwMDAsXG4gIG1heFJldHJpZXM6IDMsXG59O1xuIl0sIm5hbWVzIjpbIkpPQl9GRVRDSCIsImNvbmN1cnJlbmN5IiwicGVyU291cmNlTGltaXQiLCJnbG9iYWxMaW1pdCIsImJhY2tvZmZCYXNlTXMiLCJiYWNrb2ZmTWF4TXMiLCJ1c2VyQWdlbnQiLCJ0aW1lb3V0TXMiLCJtYXhSZXRyaWVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/jobs/config.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/jobs/sources/config.js":
/*!****************************************!*\
  !*** ./src/lib/jobs/sources/config.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GREENHOUSE_SLUGS: () => (/* binding */ GREENHOUSE_SLUGS),\n/* harmony export */   LEVER_SLUGS: () => (/* binding */ LEVER_SLUGS)\n/* harmony export */ });\nconst GREENHOUSE_SLUGS = [\n    // Tech Giants\n    \"airbnb\",\n    \"dropbox\",\n    \"github\",\n    \"uber\",\n    \"spotify\",\n    \"shopify\",\n    \"lyft\",\n    \"pinterest\",\n    \"datadog\",\n    \"cloudflare\",\n    \"discord\",\n    \"figma\",\n    \"doordash\",\n    \"rippling\",\n    \"atlassian\",\n    \"snowflake\",\n    \"plaid\",\n    \"stripe\",\n    \"coinbase\",\n    \"square\",\n    \"opentable\",\n    \"expedia\",\n    \"twitch\",\n    \"zoom\",\n    \"grammarly\",\n    \"elastic\",\n    \"miro\",\n    \"notion\",\n    \"vercel\",\n    \"asana\",\n    \"postman\",\n    \"hashicorp\",\n    \"zendesk\",\n    \"hubspot\",\n    \"segment\",\n    \"intercom\",\n    \"zapier\",\n    \"webflow\",\n    \"garmin\",\n    // Enterprise\n    \"microsoft\",\n    \"google\",\n    \"amazon\",\n    \"meta\",\n    \"apple\",\n    \"netflix\",\n    \"disney\",\n    \"adobe\",\n    \"salesforce\",\n    \"oracle\",\n    \"ibm\",\n    \"intel\",\n    \"nvidia\",\n    \"amd\",\n    \"qualcomm\",\n    \"cisco\",\n    \"juniper\",\n    \"vmware\",\n    \"redhat\",\n    \"mongodb\",\n    \"confluent\",\n    \"databricks\",\n    \"palantir\",\n    \"splunk\",\n    \"newrelic\",\n    \"dynatrace\",\n    \"docker\",\n    \"rancher\",\n    \"gitlab\",\n    \"bitbucket\",\n    \"slack\",\n    \"teams\",\n    \"calendly\",\n    \"typeform\",\n    \"airtable\",\n    \"clickup\",\n    \"monday\",\n    \"trello\",\n    \"jira\",\n    \"confluence\",\n    \"marketo\",\n    \"pardot\",\n    \"drift\",\n    \"paypal\",\n    \"venmo\",\n    \"robinhood\",\n    \"binance\",\n    \"kraken\",\n    // Startups & Scale-ups\n    \"coursera\",\n    \"asana\",\n    \"notion\",\n    \"linear\",\n    \"supabase\",\n    \"planetscale\",\n    \"railway\",\n    \"render\",\n    \"netlify\",\n    \"heroku\",\n    \"aws\",\n    \"gcp\",\n    \"azure\",\n    \"kubernetes\",\n    \"serverless\",\n    \"microservices\",\n    \"saas\",\n    \"startup\",\n    \"fintech\",\n    \"healthtech\",\n    \"edtech\",\n    \"proptech\",\n    \"ai\",\n    \"ml\",\n    \"data\",\n    \"analytics\",\n    \"security\",\n    \"cybersecurity\",\n    \"blockchain\",\n    \"crypto\"\n];\nconst LEVER_SLUGS = [\n    // Tech Companies\n    \"netflix\",\n    \"slack\",\n    \"twilio\",\n    \"robinhood\",\n    \"affirm\",\n    \"square\",\n    \"fivetran\",\n    \"ramp\",\n    \"loom\",\n    \"mixpanel\",\n    \"stripe\",\n    \"plaid\",\n    \"brex\",\n    \"mercury\",\n    \"deel\",\n    \"remote\",\n    \"gusto\",\n    \"justworks\",\n    \"rippling\",\n    \"bamboo\",\n    \"workday\",\n    \"adp\",\n    \"paychex\",\n    \"zenefits\",\n    \"notion\",\n    \"linear\",\n    \"vercel\",\n    \"supabase\",\n    \"planetscale\",\n    \"railway\",\n    \"render\",\n    \"netlify\",\n    \"heroku\",\n    \"aws\",\n    \"google\",\n    \"microsoft\",\n    \"meta\",\n    \"apple\",\n    \"amazon\",\n    \"netflix\",\n    \"disney\",\n    \"adobe\",\n    \"salesforce\",\n    \"oracle\",\n    \"ibm\",\n    \"intel\",\n    \"nvidia\",\n    \"amd\",\n    \"qualcomm\",\n    \"cisco\",\n    \"juniper\",\n    \"vmware\",\n    \"redhat\",\n    \"mongodb\",\n    \"elastic\",\n    \"confluent\",\n    \"databricks\",\n    \"snowflake\",\n    \"palantir\",\n    \"splunk\",\n    \"newrelic\",\n    \"dynatrace\",\n    \"datadog\",\n    \"hashicorp\",\n    \"docker\",\n    \"kubernetes\",\n    \"rancher\",\n    \"gitlab\",\n    \"bitbucket\",\n    \"atlassian\",\n    \"zoom\",\n    \"teams\",\n    \"calendly\",\n    \"typeform\",\n    \"airtable\",\n    \"clickup\",\n    \"monday\",\n    \"trello\",\n    \"confluence\",\n    \"hubspot\",\n    \"marketo\",\n    \"pardot\",\n    \"zendesk\",\n    \"intercom\",\n    \"drift\",\n    \"paypal\",\n    \"venmo\",\n    \"binance\",\n    \"kraken\",\n    \"gemini\",\n    \"ftx\",\n    \"blockfi\",\n    \"celsius\",\n    \"webflow\",\n    \"garmin\",\n    \"grammarly\",\n    \"miro\",\n    \"postman\"\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2pvYnMvc291cmNlcy9jb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxNQUFNQSxtQkFBbUI7SUFDOUIsY0FBYztJQUNkO0lBQVU7SUFBVztJQUFVO0lBQVE7SUFBVztJQUFXO0lBQVE7SUFBYTtJQUFXO0lBQzdGO0lBQVc7SUFBUztJQUFZO0lBQVk7SUFBYTtJQUFhO0lBQVM7SUFBVTtJQUFZO0lBQ3JHO0lBQWE7SUFBVztJQUFVO0lBQVE7SUFBYTtJQUFXO0lBQVE7SUFBVTtJQUFVO0lBQzlGO0lBQVc7SUFBYTtJQUFXO0lBQVc7SUFBVztJQUFZO0lBQVU7SUFBVztJQUUxRixhQUFhO0lBQ2I7SUFBYTtJQUFVO0lBQVU7SUFBUTtJQUFTO0lBQVc7SUFBVTtJQUFTO0lBQWM7SUFDOUY7SUFBTztJQUFTO0lBQVU7SUFBTztJQUFZO0lBQVM7SUFBVztJQUFVO0lBQVU7SUFDckY7SUFBYTtJQUFjO0lBQVk7SUFBVTtJQUFZO0lBQWE7SUFBVTtJQUFXO0lBQy9GO0lBQWE7SUFBUztJQUFTO0lBQVk7SUFBWTtJQUFZO0lBQVc7SUFBVTtJQUFVO0lBQ2xHO0lBQWM7SUFBVztJQUFVO0lBQVM7SUFBVTtJQUFTO0lBQWE7SUFBVztJQUV2Rix1QkFBdUI7SUFDdkI7SUFBWTtJQUFTO0lBQVU7SUFBVTtJQUFZO0lBQWU7SUFBVztJQUFVO0lBQVc7SUFDcEc7SUFBTztJQUFPO0lBQVM7SUFBYztJQUFjO0lBQWlCO0lBQVE7SUFBVztJQUFXO0lBQ2xHO0lBQVU7SUFBWTtJQUFNO0lBQU07SUFBUTtJQUFhO0lBQVk7SUFBaUI7SUFBYztDQUNuRyxDQUFDO0FBRUssTUFBTUMsY0FBYztJQUN6QixpQkFBaUI7SUFDakI7SUFBVztJQUFTO0lBQVU7SUFBYTtJQUFVO0lBQVU7SUFBWTtJQUFRO0lBQVE7SUFDM0Y7SUFBVTtJQUFTO0lBQVE7SUFBVztJQUFRO0lBQVU7SUFBUztJQUFhO0lBQVk7SUFDMUY7SUFBVztJQUFPO0lBQVc7SUFBWTtJQUFVO0lBQVU7SUFBVTtJQUFZO0lBQWU7SUFDbEc7SUFBVTtJQUFXO0lBQVU7SUFBTztJQUFVO0lBQWE7SUFBUTtJQUFTO0lBQVU7SUFDeEY7SUFBVTtJQUFTO0lBQWM7SUFBVTtJQUFPO0lBQVM7SUFBVTtJQUFPO0lBQVk7SUFDeEY7SUFBVztJQUFVO0lBQVU7SUFBVztJQUFXO0lBQWE7SUFBYztJQUFhO0lBQzdGO0lBQVU7SUFBWTtJQUFhO0lBQVc7SUFBYTtJQUFVO0lBQWM7SUFBVztJQUM5RjtJQUFhO0lBQWE7SUFBUTtJQUFTO0lBQVk7SUFBWTtJQUFZO0lBQVc7SUFBVTtJQUNwRztJQUFjO0lBQVc7SUFBVztJQUFVO0lBQVc7SUFBWTtJQUFTO0lBQVU7SUFBUztJQUNqRztJQUFVO0lBQVU7SUFBTztJQUFXO0lBQVc7SUFBVztJQUFVO0lBQWE7SUFBUTtDQUM1RixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FyZWVyYm9vc3QtbmV4dGpzLy4vc3JjL2xpYi9qb2JzL3NvdXJjZXMvY29uZmlnLmpzP2M3ZGQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IEdSRUVOSE9VU0VfU0xVR1MgPSBbXG4gIC8vIFRlY2ggR2lhbnRzXG4gIFwiYWlyYm5iXCIsIFwiZHJvcGJveFwiLCBcImdpdGh1YlwiLCBcInViZXJcIiwgXCJzcG90aWZ5XCIsIFwic2hvcGlmeVwiLCBcImx5ZnRcIiwgXCJwaW50ZXJlc3RcIiwgXCJkYXRhZG9nXCIsIFwiY2xvdWRmbGFyZVwiLFxuICBcImRpc2NvcmRcIiwgXCJmaWdtYVwiLCBcImRvb3JkYXNoXCIsIFwicmlwcGxpbmdcIiwgXCJhdGxhc3NpYW5cIiwgXCJzbm93Zmxha2VcIiwgXCJwbGFpZFwiLCBcInN0cmlwZVwiLCBcImNvaW5iYXNlXCIsIFwic3F1YXJlXCIsXG4gIFwib3BlbnRhYmxlXCIsIFwiZXhwZWRpYVwiLCBcInR3aXRjaFwiLCBcInpvb21cIiwgXCJncmFtbWFybHlcIiwgXCJlbGFzdGljXCIsIFwibWlyb1wiLCBcIm5vdGlvblwiLCBcInZlcmNlbFwiLCBcImFzYW5hXCIsXG4gIFwicG9zdG1hblwiLCBcImhhc2hpY29ycFwiLCBcInplbmRlc2tcIiwgXCJodWJzcG90XCIsIFwic2VnbWVudFwiLCBcImludGVyY29tXCIsIFwiemFwaWVyXCIsIFwid2ViZmxvd1wiLCBcImdhcm1pblwiLFxuICBcbiAgLy8gRW50ZXJwcmlzZVxuICBcIm1pY3Jvc29mdFwiLCBcImdvb2dsZVwiLCBcImFtYXpvblwiLCBcIm1ldGFcIiwgXCJhcHBsZVwiLCBcIm5ldGZsaXhcIiwgXCJkaXNuZXlcIiwgXCJhZG9iZVwiLCBcInNhbGVzZm9yY2VcIiwgXCJvcmFjbGVcIixcbiAgXCJpYm1cIiwgXCJpbnRlbFwiLCBcIm52aWRpYVwiLCBcImFtZFwiLCBcInF1YWxjb21tXCIsIFwiY2lzY29cIiwgXCJqdW5pcGVyXCIsIFwidm13YXJlXCIsIFwicmVkaGF0XCIsIFwibW9uZ29kYlwiLFxuICBcImNvbmZsdWVudFwiLCBcImRhdGFicmlja3NcIiwgXCJwYWxhbnRpclwiLCBcInNwbHVua1wiLCBcIm5ld3JlbGljXCIsIFwiZHluYXRyYWNlXCIsIFwiZG9ja2VyXCIsIFwicmFuY2hlclwiLCBcImdpdGxhYlwiLFxuICBcImJpdGJ1Y2tldFwiLCBcInNsYWNrXCIsIFwidGVhbXNcIiwgXCJjYWxlbmRseVwiLCBcInR5cGVmb3JtXCIsIFwiYWlydGFibGVcIiwgXCJjbGlja3VwXCIsIFwibW9uZGF5XCIsIFwidHJlbGxvXCIsIFwiamlyYVwiLFxuICBcImNvbmZsdWVuY2VcIiwgXCJtYXJrZXRvXCIsIFwicGFyZG90XCIsIFwiZHJpZnRcIiwgXCJwYXlwYWxcIiwgXCJ2ZW5tb1wiLCBcInJvYmluaG9vZFwiLCBcImJpbmFuY2VcIiwgXCJrcmFrZW5cIixcbiAgXG4gIC8vIFN0YXJ0dXBzICYgU2NhbGUtdXBzXG4gIFwiY291cnNlcmFcIiwgXCJhc2FuYVwiLCBcIm5vdGlvblwiLCBcImxpbmVhclwiLCBcInN1cGFiYXNlXCIsIFwicGxhbmV0c2NhbGVcIiwgXCJyYWlsd2F5XCIsIFwicmVuZGVyXCIsIFwibmV0bGlmeVwiLCBcImhlcm9rdVwiLFxuICBcImF3c1wiLCBcImdjcFwiLCBcImF6dXJlXCIsIFwia3ViZXJuZXRlc1wiLCBcInNlcnZlcmxlc3NcIiwgXCJtaWNyb3NlcnZpY2VzXCIsIFwic2Fhc1wiLCBcInN0YXJ0dXBcIiwgXCJmaW50ZWNoXCIsIFwiaGVhbHRodGVjaFwiLFxuICBcImVkdGVjaFwiLCBcInByb3B0ZWNoXCIsIFwiYWlcIiwgXCJtbFwiLCBcImRhdGFcIiwgXCJhbmFseXRpY3NcIiwgXCJzZWN1cml0eVwiLCBcImN5YmVyc2VjdXJpdHlcIiwgXCJibG9ja2NoYWluXCIsIFwiY3J5cHRvXCJcbl07XG5cbmV4cG9ydCBjb25zdCBMRVZFUl9TTFVHUyA9IFtcbiAgLy8gVGVjaCBDb21wYW5pZXNcbiAgXCJuZXRmbGl4XCIsIFwic2xhY2tcIiwgXCJ0d2lsaW9cIiwgXCJyb2Jpbmhvb2RcIiwgXCJhZmZpcm1cIiwgXCJzcXVhcmVcIiwgXCJmaXZldHJhblwiLCBcInJhbXBcIiwgXCJsb29tXCIsIFwibWl4cGFuZWxcIixcbiAgXCJzdHJpcGVcIiwgXCJwbGFpZFwiLCBcImJyZXhcIiwgXCJtZXJjdXJ5XCIsIFwiZGVlbFwiLCBcInJlbW90ZVwiLCBcImd1c3RvXCIsIFwianVzdHdvcmtzXCIsIFwicmlwcGxpbmdcIiwgXCJiYW1ib29cIixcbiAgXCJ3b3JrZGF5XCIsIFwiYWRwXCIsIFwicGF5Y2hleFwiLCBcInplbmVmaXRzXCIsIFwibm90aW9uXCIsIFwibGluZWFyXCIsIFwidmVyY2VsXCIsIFwic3VwYWJhc2VcIiwgXCJwbGFuZXRzY2FsZVwiLCBcInJhaWx3YXlcIixcbiAgXCJyZW5kZXJcIiwgXCJuZXRsaWZ5XCIsIFwiaGVyb2t1XCIsIFwiYXdzXCIsIFwiZ29vZ2xlXCIsIFwibWljcm9zb2Z0XCIsIFwibWV0YVwiLCBcImFwcGxlXCIsIFwiYW1hem9uXCIsIFwibmV0ZmxpeFwiLFxuICBcImRpc25leVwiLCBcImFkb2JlXCIsIFwic2FsZXNmb3JjZVwiLCBcIm9yYWNsZVwiLCBcImlibVwiLCBcImludGVsXCIsIFwibnZpZGlhXCIsIFwiYW1kXCIsIFwicXVhbGNvbW1cIiwgXCJjaXNjb1wiLFxuICBcImp1bmlwZXJcIiwgXCJ2bXdhcmVcIiwgXCJyZWRoYXRcIiwgXCJtb25nb2RiXCIsIFwiZWxhc3RpY1wiLCBcImNvbmZsdWVudFwiLCBcImRhdGFicmlja3NcIiwgXCJzbm93Zmxha2VcIiwgXCJwYWxhbnRpclwiLFxuICBcInNwbHVua1wiLCBcIm5ld3JlbGljXCIsIFwiZHluYXRyYWNlXCIsIFwiZGF0YWRvZ1wiLCBcImhhc2hpY29ycFwiLCBcImRvY2tlclwiLCBcImt1YmVybmV0ZXNcIiwgXCJyYW5jaGVyXCIsIFwiZ2l0bGFiXCIsXG4gIFwiYml0YnVja2V0XCIsIFwiYXRsYXNzaWFuXCIsIFwiem9vbVwiLCBcInRlYW1zXCIsIFwiY2FsZW5kbHlcIiwgXCJ0eXBlZm9ybVwiLCBcImFpcnRhYmxlXCIsIFwiY2xpY2t1cFwiLCBcIm1vbmRheVwiLCBcInRyZWxsb1wiLFxuICBcImNvbmZsdWVuY2VcIiwgXCJodWJzcG90XCIsIFwibWFya2V0b1wiLCBcInBhcmRvdFwiLCBcInplbmRlc2tcIiwgXCJpbnRlcmNvbVwiLCBcImRyaWZ0XCIsIFwicGF5cGFsXCIsIFwidmVubW9cIiwgXCJiaW5hbmNlXCIsXG4gIFwia3Jha2VuXCIsIFwiZ2VtaW5pXCIsIFwiZnR4XCIsIFwiYmxvY2tmaVwiLCBcImNlbHNpdXNcIiwgXCJ3ZWJmbG93XCIsIFwiZ2FybWluXCIsIFwiZ3JhbW1hcmx5XCIsIFwibWlyb1wiLCBcInBvc3RtYW5cIlxuXTtcbiJdLCJuYW1lcyI6WyJHUkVFTkhPVVNFX1NMVUdTIiwiTEVWRVJfU0xVR1MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/jobs/sources/config.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/jobs/sources/greenhouse.js":
/*!********************************************!*\
  !*** ./src/lib/jobs/sources/greenhouse.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchGreenhouse: () => (/* binding */ fetchGreenhouse),\n/* harmony export */   fetchGreenhouseAll: () => (/* binding */ fetchGreenhouseAll)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(rsc)/./src/lib/jobs/utils.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config.js */ \"(rsc)/./src/lib/jobs/sources/config.js\");\n\n\nasync function fetchGreenhouse(slug, { limit = _utils_js__WEBPACK_IMPORTED_MODULE_0__.JOB_FETCH.perSourceLimit } = {}) {\n    try {\n        const url = `https://boards-api.greenhouse.io/v1/boards/${encodeURIComponent(slug)}/jobs`;\n        const response = await (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.backoffFetch)(url);\n        const data = await response.json();\n        if (!data || !Array.isArray(data.jobs)) {\n            return [];\n        }\n        const jobs = data.jobs.slice(0, limit).map((job)=>{\n            const tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.extractTags)(job.content || \"\", [\n                ...job?.departments?.map((d)=>d?.name) || [],\n                ...job?.offices?.map((o)=>o?.name) || []\n            ]);\n            return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.normalizeJob)({\n                id: `gh_${slug}_${job.id}`,\n                title: job.title || \"\",\n                company: slug,\n                location: job?.location?.name || \"\",\n                remote: /remote/i.test(job?.location?.name || \"\") || JSON.stringify(job || {}).toLowerCase().includes(\"remote\"),\n                tags: tags,\n                summary: job?.content || \"\",\n                url: job.absolute_url || `https://boards.greenhouse.io/${slug}/jobs/${job.id}`,\n                employmentType: \"\",\n                source: \"greenhouse\",\n                postedAt: \"\"\n            });\n        });\n        return jobs;\n    } catch (error) {\n        console.error(`Greenhouse ${slug} fetch error:`, error.message);\n        return [];\n    }\n}\nasync function fetchGreenhouseAll({ limit = _utils_js__WEBPACK_IMPORTED_MODULE_0__.JOB_FETCH.perSourceLimit } = {}) {\n    console.log(`Fetching Greenhouse jobs from ${_config_js__WEBPACK_IMPORTED_MODULE_1__.GREENHOUSE_SLUGS.length} companies...`);\n    const tasks = _config_js__WEBPACK_IMPORTED_MODULE_1__.GREENHOUSE_SLUGS.map((slug)=>()=>fetchGreenhouse(slug, {\n                limit\n            }));\n    const results = await (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.limitConcurrency)(tasks, _utils_js__WEBPACK_IMPORTED_MODULE_0__.JOB_FETCH.concurrency);\n    const allJobs = results.flat().filter((job)=>job && !job.error);\n    console.log(`Greenhouse: Fetched ${allJobs.length} jobs from ${results.filter((r)=>r && r.length > 0).length} companies`);\n    return allJobs;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2pvYnMvc291cmNlcy9ncmVlbmhvdXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBbUc7QUFDOUM7QUFFOUMsZUFBZU8sZ0JBQWdCQyxJQUFJLEVBQUUsRUFBRUMsUUFBUUwsZ0RBQVNBLENBQUNNLGNBQWMsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNuRixJQUFJO1FBQ0YsTUFBTUMsTUFBTSxDQUFDLDJDQUEyQyxFQUFFQyxtQkFBbUJKLE1BQU0sS0FBSyxDQUFDO1FBQ3pGLE1BQU1LLFdBQVcsTUFBTWIsdURBQVlBLENBQUNXO1FBQ3BDLE1BQU1HLE9BQU8sTUFBTUQsU0FBU0UsSUFBSTtRQUVoQyxJQUFJLENBQUNELFFBQVEsQ0FBQ0UsTUFBTUMsT0FBTyxDQUFDSCxLQUFLSSxJQUFJLEdBQUc7WUFDdEMsT0FBTyxFQUFFO1FBQ1g7UUFFQSxNQUFNQSxPQUFPSixLQUFLSSxJQUFJLENBQUNDLEtBQUssQ0FBQyxHQUFHVixPQUFPVyxHQUFHLENBQUNDLENBQUFBO1lBQ3pDLE1BQU1DLE9BQU9wQixzREFBV0EsQ0FBQ21CLElBQUlFLE9BQU8sSUFBSSxJQUFJO21CQUN0Q0YsS0FBS0csYUFBYUosSUFBSUssQ0FBQUEsSUFBS0EsR0FBR0MsU0FBUyxFQUFFO21CQUN6Q0wsS0FBS00sU0FBU1AsSUFBSVEsQ0FBQUEsSUFBS0EsR0FBR0YsU0FBUyxFQUFFO2FBQzFDO1lBRUQsT0FBT3pCLHVEQUFZQSxDQUFDO2dCQUNsQjRCLElBQUksQ0FBQyxHQUFHLEVBQUVyQixLQUFLLENBQUMsRUFBRWEsSUFBSVEsRUFBRSxDQUFDLENBQUM7Z0JBQzFCQyxPQUFPVCxJQUFJUyxLQUFLLElBQUk7Z0JBQ3BCQyxTQUFTdkI7Z0JBQ1R3QixVQUFVWCxLQUFLVyxVQUFVTixRQUFRO2dCQUNqQ08sUUFBUSxVQUFVQyxJQUFJLENBQUNiLEtBQUtXLFVBQVVOLFFBQVEsT0FBT1MsS0FBS0MsU0FBUyxDQUFDZixPQUFPLENBQUMsR0FBR2dCLFdBQVcsR0FBR0MsUUFBUSxDQUFDO2dCQUN0R2hCLE1BQU1BO2dCQUNOaUIsU0FBU2xCLEtBQUtFLFdBQVc7Z0JBQ3pCWixLQUFLVSxJQUFJbUIsWUFBWSxJQUFJLENBQUMsNkJBQTZCLEVBQUVoQyxLQUFLLE1BQU0sRUFBRWEsSUFBSVEsRUFBRSxDQUFDLENBQUM7Z0JBQzlFWSxnQkFBZ0I7Z0JBQ2hCQyxRQUFRO2dCQUNSQyxVQUFVO1lBQ1o7UUFDRjtRQUVBLE9BQU96QjtJQUNULEVBQUUsT0FBTzBCLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLENBQUMsV0FBVyxFQUFFcEMsS0FBSyxhQUFhLENBQUMsRUFBRW9DLE1BQU1FLE9BQU87UUFDOUQsT0FBTyxFQUFFO0lBQ1g7QUFDRjtBQUVPLGVBQWVDLG1CQUFtQixFQUFFdEMsUUFBUUwsZ0RBQVNBLENBQUNNLGNBQWMsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNoRm1DLFFBQVFHLEdBQUcsQ0FBQyxDQUFDLDhCQUE4QixFQUFFMUMsd0RBQUVBLENBQUMyQyxNQUFNLENBQUMsYUFBYSxDQUFDO0lBRXJFLE1BQU1DLFFBQVE1Qyx3REFBRUEsQ0FBQ2MsR0FBRyxDQUFDWixDQUFBQSxPQUFRLElBQU1ELGdCQUFnQkMsTUFBTTtnQkFBRUM7WUFBTTtJQUNqRSxNQUFNMEMsVUFBVSxNQUFNaEQsMkRBQWdCQSxDQUFDK0MsT0FBTzlDLGdEQUFTQSxDQUFDZ0QsV0FBVztJQUVuRSxNQUFNQyxVQUFVRixRQUFRRyxJQUFJLEdBQUdDLE1BQU0sQ0FBQ2xDLENBQUFBLE1BQU9BLE9BQU8sQ0FBQ0EsSUFBSXVCLEtBQUs7SUFDOURDLFFBQVFHLEdBQUcsQ0FBQyxDQUFDLG9CQUFvQixFQUFFSyxRQUFRSixNQUFNLENBQUMsV0FBVyxFQUFFRSxRQUFRSSxNQUFNLENBQUNDLENBQUFBLElBQUtBLEtBQUtBLEVBQUVQLE1BQU0sR0FBRyxHQUFHQSxNQUFNLENBQUMsVUFBVSxDQUFDO0lBRXhILE9BQU9JO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYXJlZXJib29zdC1uZXh0anMvLi9zcmMvbGliL2pvYnMvc291cmNlcy9ncmVlbmhvdXNlLmpzPzE0YjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFja29mZkZldGNoLCBub3JtYWxpemVKb2IsIGV4dHJhY3RUYWdzLCBsaW1pdENvbmN1cnJlbmN5LCBKT0JfRkVUQ0ggfSBmcm9tIFwiLi4vdXRpbHMuanNcIjtcbmltcG9ydCB7IEdSRUVOSE9VU0VfU0xVR1MgYXMgR0ggfSBmcm9tIFwiLi9jb25maWcuanNcIjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoR3JlZW5ob3VzZShzbHVnLCB7IGxpbWl0ID0gSk9CX0ZFVENILnBlclNvdXJjZUxpbWl0IH0gPSB7fSkge1xuICB0cnkge1xuICAgIGNvbnN0IHVybCA9IGBodHRwczovL2JvYXJkcy1hcGkuZ3JlZW5ob3VzZS5pby92MS9ib2FyZHMvJHtlbmNvZGVVUklDb21wb25lbnQoc2x1Zyl9L2pvYnNgO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYmFja29mZkZldGNoKHVybCk7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICBcbiAgICBpZiAoIWRhdGEgfHwgIUFycmF5LmlzQXJyYXkoZGF0YS5qb2JzKSkge1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBqb2JzID0gZGF0YS5qb2JzLnNsaWNlKDAsIGxpbWl0KS5tYXAoam9iID0+IHtcbiAgICAgIGNvbnN0IHRhZ3MgPSBleHRyYWN0VGFncyhqb2IuY29udGVudCB8fCBcIlwiLCBbXG4gICAgICAgIC4uLihqb2I/LmRlcGFydG1lbnRzPy5tYXAoZCA9PiBkPy5uYW1lKSB8fCBbXSksXG4gICAgICAgIC4uLihqb2I/Lm9mZmljZXM/Lm1hcChvID0+IG8/Lm5hbWUpIHx8IFtdKVxuICAgICAgXSk7XG4gICAgICBcbiAgICAgIHJldHVybiBub3JtYWxpemVKb2Ioe1xuICAgICAgICBpZDogYGdoXyR7c2x1Z31fJHtqb2IuaWR9YCxcbiAgICAgICAgdGl0bGU6IGpvYi50aXRsZSB8fCBcIlwiLFxuICAgICAgICBjb21wYW55OiBzbHVnLFxuICAgICAgICBsb2NhdGlvbjogam9iPy5sb2NhdGlvbj8ubmFtZSB8fCBcIlwiLFxuICAgICAgICByZW1vdGU6IC9yZW1vdGUvaS50ZXN0KGpvYj8ubG9jYXRpb24/Lm5hbWUgfHwgXCJcIikgfHwgSlNPTi5zdHJpbmdpZnkoam9iIHx8IHt9KS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKFwicmVtb3RlXCIpLFxuICAgICAgICB0YWdzOiB0YWdzLFxuICAgICAgICBzdW1tYXJ5OiBqb2I/LmNvbnRlbnQgfHwgXCJcIixcbiAgICAgICAgdXJsOiBqb2IuYWJzb2x1dGVfdXJsIHx8IGBodHRwczovL2JvYXJkcy5ncmVlbmhvdXNlLmlvLyR7c2x1Z30vam9icy8ke2pvYi5pZH1gLFxuICAgICAgICBlbXBsb3ltZW50VHlwZTogXCJcIixcbiAgICAgICAgc291cmNlOiBcImdyZWVuaG91c2VcIixcbiAgICAgICAgcG9zdGVkQXQ6IFwiXCJcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIFxuICAgIHJldHVybiBqb2JzO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoYEdyZWVuaG91c2UgJHtzbHVnfSBmZXRjaCBlcnJvcjpgLCBlcnJvci5tZXNzYWdlKTtcbiAgICByZXR1cm4gW107XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoR3JlZW5ob3VzZUFsbCh7IGxpbWl0ID0gSk9CX0ZFVENILnBlclNvdXJjZUxpbWl0IH0gPSB7fSkge1xuICBjb25zb2xlLmxvZyhgRmV0Y2hpbmcgR3JlZW5ob3VzZSBqb2JzIGZyb20gJHtHSC5sZW5ndGh9IGNvbXBhbmllcy4uLmApO1xuICBcbiAgY29uc3QgdGFza3MgPSBHSC5tYXAoc2x1ZyA9PiAoKSA9PiBmZXRjaEdyZWVuaG91c2Uoc2x1ZywgeyBsaW1pdCB9KSk7XG4gIGNvbnN0IHJlc3VsdHMgPSBhd2FpdCBsaW1pdENvbmN1cnJlbmN5KHRhc2tzLCBKT0JfRkVUQ0guY29uY3VycmVuY3kpO1xuICBcbiAgY29uc3QgYWxsSm9icyA9IHJlc3VsdHMuZmxhdCgpLmZpbHRlcihqb2IgPT4gam9iICYmICFqb2IuZXJyb3IpO1xuICBjb25zb2xlLmxvZyhgR3JlZW5ob3VzZTogRmV0Y2hlZCAke2FsbEpvYnMubGVuZ3RofSBqb2JzIGZyb20gJHtyZXN1bHRzLmZpbHRlcihyID0+IHIgJiYgci5sZW5ndGggPiAwKS5sZW5ndGh9IGNvbXBhbmllc2ApO1xuICBcbiAgcmV0dXJuIGFsbEpvYnM7XG59XG4iXSwibmFtZXMiOlsiYmFja29mZkZldGNoIiwibm9ybWFsaXplSm9iIiwiZXh0cmFjdFRhZ3MiLCJsaW1pdENvbmN1cnJlbmN5IiwiSk9CX0ZFVENIIiwiR1JFRU5IT1VTRV9TTFVHUyIsIkdIIiwiZmV0Y2hHcmVlbmhvdXNlIiwic2x1ZyIsImxpbWl0IiwicGVyU291cmNlTGltaXQiLCJ1cmwiLCJlbmNvZGVVUklDb21wb25lbnQiLCJyZXNwb25zZSIsImRhdGEiLCJqc29uIiwiQXJyYXkiLCJpc0FycmF5Iiwiam9icyIsInNsaWNlIiwibWFwIiwiam9iIiwidGFncyIsImNvbnRlbnQiLCJkZXBhcnRtZW50cyIsImQiLCJuYW1lIiwib2ZmaWNlcyIsIm8iLCJpZCIsInRpdGxlIiwiY29tcGFueSIsImxvY2F0aW9uIiwicmVtb3RlIiwidGVzdCIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0b0xvd2VyQ2FzZSIsImluY2x1ZGVzIiwic3VtbWFyeSIsImFic29sdXRlX3VybCIsImVtcGxveW1lbnRUeXBlIiwic291cmNlIiwicG9zdGVkQXQiLCJlcnJvciIsImNvbnNvbGUiLCJtZXNzYWdlIiwiZmV0Y2hHcmVlbmhvdXNlQWxsIiwibG9nIiwibGVuZ3RoIiwidGFza3MiLCJyZXN1bHRzIiwiY29uY3VycmVuY3kiLCJhbGxKb2JzIiwiZmxhdCIsImZpbHRlciIsInIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/jobs/sources/greenhouse.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/jobs/sources/lever.js":
/*!***************************************!*\
  !*** ./src/lib/jobs/sources/lever.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchLever: () => (/* binding */ fetchLever),\n/* harmony export */   fetchLeverAll: () => (/* binding */ fetchLeverAll)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(rsc)/./src/lib/jobs/utils.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config.js */ \"(rsc)/./src/lib/jobs/sources/config.js\");\n\n\nasync function fetchLever(slug, { limit = _utils_js__WEBPACK_IMPORTED_MODULE_0__.JOB_FETCH.perSourceLimit } = {}) {\n    try {\n        const url = `https://api.lever.co/v0/postings/${encodeURIComponent(slug)}?mode=json`;\n        const response = await (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.backoffFetch)(url);\n        const data = await response.json();\n        if (!Array.isArray(data)) {\n            return [];\n        }\n        const jobs = data.slice(0, limit).map((posting)=>{\n            const summary = (posting?.lists || []).map((l)=>l?.text).join(\" \") || posting?.description || \"\";\n            const tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.extractTags)(summary, posting?.tags || []);\n            return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.normalizeJob)({\n                id: `lever_${slug}_${posting.id}`,\n                title: posting.text || posting.title || \"\",\n                company: posting?.categories?.team || slug,\n                location: posting?.categories?.location || \"\",\n                remote: /remote/i.test(posting?.categories?.location || \"\") || JSON.stringify(posting || {}).toLowerCase().includes(\"remote\"),\n                tags: tags,\n                summary: summary,\n                url: posting.hostedUrl || posting.applyUrl || \"\",\n                employmentType: posting?.categories?.commitment || \"\",\n                source: \"lever\",\n                postedAt: \"\"\n            });\n        });\n        return jobs;\n    } catch (error) {\n        console.error(`Lever ${slug} fetch error:`, error.message);\n        return [];\n    }\n}\nasync function fetchLeverAll({ limit = _utils_js__WEBPACK_IMPORTED_MODULE_0__.JOB_FETCH.perSourceLimit } = {}) {\n    console.log(`Fetching Lever jobs from ${_config_js__WEBPACK_IMPORTED_MODULE_1__.LEVER_SLUGS.length} companies...`);\n    const tasks = _config_js__WEBPACK_IMPORTED_MODULE_1__.LEVER_SLUGS.map((slug)=>()=>fetchLever(slug, {\n                limit\n            }));\n    const results = await (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.limitConcurrency)(tasks, _utils_js__WEBPACK_IMPORTED_MODULE_0__.JOB_FETCH.concurrency);\n    const allJobs = results.flat().filter((job)=>job && !job.error);\n    console.log(`Lever: Fetched ${allJobs.length} jobs from ${results.filter((r)=>r && r.length > 0).length} companies`);\n    return allJobs;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2pvYnMvc291cmNlcy9sZXZlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW1HO0FBQ25EO0FBRXpDLGVBQWVPLFdBQVdDLElBQUksRUFBRSxFQUFFQyxRQUFRTCxnREFBU0EsQ0FBQ00sY0FBYyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQzlFLElBQUk7UUFDRixNQUFNQyxNQUFNLENBQUMsaUNBQWlDLEVBQUVDLG1CQUFtQkosTUFBTSxVQUFVLENBQUM7UUFDcEYsTUFBTUssV0FBVyxNQUFNYix1REFBWUEsQ0FBQ1c7UUFDcEMsTUFBTUcsT0FBTyxNQUFNRCxTQUFTRSxJQUFJO1FBRWhDLElBQUksQ0FBQ0MsTUFBTUMsT0FBTyxDQUFDSCxPQUFPO1lBQ3hCLE9BQU8sRUFBRTtRQUNYO1FBRUEsTUFBTUksT0FBT0osS0FBS0ssS0FBSyxDQUFDLEdBQUdWLE9BQU9XLEdBQUcsQ0FBQ0MsQ0FBQUE7WUFDcEMsTUFBTUMsVUFBVSxDQUFDRCxTQUFTRSxTQUFTLEVBQUUsRUFBRUgsR0FBRyxDQUFDSSxDQUFBQSxJQUFLQSxHQUFHQyxNQUFNQyxJQUFJLENBQUMsUUFBUUwsU0FBU00sZUFBZTtZQUM5RixNQUFNQyxPQUFPMUIsc0RBQVdBLENBQUNvQixTQUFTRCxTQUFTTyxRQUFRLEVBQUU7WUFFckQsT0FBTzNCLHVEQUFZQSxDQUFDO2dCQUNsQjRCLElBQUksQ0FBQyxNQUFNLEVBQUVyQixLQUFLLENBQUMsRUFBRWEsUUFBUVEsRUFBRSxDQUFDLENBQUM7Z0JBQ2pDQyxPQUFPVCxRQUFRSSxJQUFJLElBQUlKLFFBQVFTLEtBQUssSUFBSTtnQkFDeENDLFNBQVNWLFNBQVNXLFlBQVlDLFFBQVF6QjtnQkFDdEMwQixVQUFVYixTQUFTVyxZQUFZRSxZQUFZO2dCQUMzQ0MsUUFBUSxVQUFVQyxJQUFJLENBQUNmLFNBQVNXLFlBQVlFLFlBQVksT0FBT0csS0FBS0MsU0FBUyxDQUFDakIsV0FBVyxDQUFDLEdBQUdrQixXQUFXLEdBQUdDLFFBQVEsQ0FBQztnQkFDcEhaLE1BQU1BO2dCQUNOTixTQUFTQTtnQkFDVFgsS0FBS1UsUUFBUW9CLFNBQVMsSUFBSXBCLFFBQVFxQixRQUFRLElBQUk7Z0JBQzlDQyxnQkFBZ0J0QixTQUFTVyxZQUFZWSxjQUFjO2dCQUNuREMsUUFBUTtnQkFDUkMsVUFBVTtZQUNaO1FBQ0Y7UUFFQSxPQUFPNUI7SUFDVCxFQUFFLE9BQU82QixPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxDQUFDLE1BQU0sRUFBRXZDLEtBQUssYUFBYSxDQUFDLEVBQUV1QyxNQUFNRSxPQUFPO1FBQ3pELE9BQU8sRUFBRTtJQUNYO0FBQ0Y7QUFFTyxlQUFlQyxjQUFjLEVBQUV6QyxRQUFRTCxnREFBU0EsQ0FBQ00sY0FBYyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQzNFc0MsUUFBUUcsR0FBRyxDQUFDLENBQUMseUJBQXlCLEVBQUU3QyxtREFBRUEsQ0FBQzhDLE1BQU0sQ0FBQyxhQUFhLENBQUM7SUFFaEUsTUFBTUMsUUFBUS9DLG1EQUFFQSxDQUFDYyxHQUFHLENBQUNaLENBQUFBLE9BQVEsSUFBTUQsV0FBV0MsTUFBTTtnQkFBRUM7WUFBTTtJQUM1RCxNQUFNNkMsVUFBVSxNQUFNbkQsMkRBQWdCQSxDQUFDa0QsT0FBT2pELGdEQUFTQSxDQUFDbUQsV0FBVztJQUVuRSxNQUFNQyxVQUFVRixRQUFRRyxJQUFJLEdBQUdDLE1BQU0sQ0FBQ0MsQ0FBQUEsTUFBT0EsT0FBTyxDQUFDQSxJQUFJWixLQUFLO0lBQzlEQyxRQUFRRyxHQUFHLENBQUMsQ0FBQyxlQUFlLEVBQUVLLFFBQVFKLE1BQU0sQ0FBQyxXQUFXLEVBQUVFLFFBQVFJLE1BQU0sQ0FBQ0UsQ0FBQUEsSUFBS0EsS0FBS0EsRUFBRVIsTUFBTSxHQUFHLEdBQUdBLE1BQU0sQ0FBQyxVQUFVLENBQUM7SUFFbkgsT0FBT0k7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL2NhcmVlcmJvb3N0LW5leHRqcy8uL3NyYy9saWIvam9icy9zb3VyY2VzL2xldmVyLmpzP2NlNDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFja29mZkZldGNoLCBub3JtYWxpemVKb2IsIGV4dHJhY3RUYWdzLCBsaW1pdENvbmN1cnJlbmN5LCBKT0JfRkVUQ0ggfSBmcm9tIFwiLi4vdXRpbHMuanNcIjtcbmltcG9ydCB7IExFVkVSX1NMVUdTIGFzIExWIH0gZnJvbSBcIi4vY29uZmlnLmpzXCI7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaExldmVyKHNsdWcsIHsgbGltaXQgPSBKT0JfRkVUQ0gucGVyU291cmNlTGltaXQgfSA9IHt9KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgdXJsID0gYGh0dHBzOi8vYXBpLmxldmVyLmNvL3YwL3Bvc3RpbmdzLyR7ZW5jb2RlVVJJQ29tcG9uZW50KHNsdWcpfT9tb2RlPWpzb25gO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYmFja29mZkZldGNoKHVybCk7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICBcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoZGF0YSkpIHtcbiAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gICAgXG4gICAgY29uc3Qgam9icyA9IGRhdGEuc2xpY2UoMCwgbGltaXQpLm1hcChwb3N0aW5nID0+IHtcbiAgICAgIGNvbnN0IHN1bW1hcnkgPSAocG9zdGluZz8ubGlzdHMgfHwgW10pLm1hcChsID0+IGw/LnRleHQpLmpvaW4oXCIgXCIpIHx8IHBvc3Rpbmc/LmRlc2NyaXB0aW9uIHx8IFwiXCI7XG4gICAgICBjb25zdCB0YWdzID0gZXh0cmFjdFRhZ3Moc3VtbWFyeSwgcG9zdGluZz8udGFncyB8fCBbXSk7XG4gICAgICBcbiAgICAgIHJldHVybiBub3JtYWxpemVKb2Ioe1xuICAgICAgICBpZDogYGxldmVyXyR7c2x1Z31fJHtwb3N0aW5nLmlkfWAsXG4gICAgICAgIHRpdGxlOiBwb3N0aW5nLnRleHQgfHwgcG9zdGluZy50aXRsZSB8fCBcIlwiLFxuICAgICAgICBjb21wYW55OiBwb3N0aW5nPy5jYXRlZ29yaWVzPy50ZWFtIHx8IHNsdWcsXG4gICAgICAgIGxvY2F0aW9uOiBwb3N0aW5nPy5jYXRlZ29yaWVzPy5sb2NhdGlvbiB8fCBcIlwiLFxuICAgICAgICByZW1vdGU6IC9yZW1vdGUvaS50ZXN0KHBvc3Rpbmc/LmNhdGVnb3JpZXM/LmxvY2F0aW9uIHx8IFwiXCIpIHx8IEpTT04uc3RyaW5naWZ5KHBvc3RpbmcgfHwge30pLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoXCJyZW1vdGVcIiksXG4gICAgICAgIHRhZ3M6IHRhZ3MsXG4gICAgICAgIHN1bW1hcnk6IHN1bW1hcnksXG4gICAgICAgIHVybDogcG9zdGluZy5ob3N0ZWRVcmwgfHwgcG9zdGluZy5hcHBseVVybCB8fCBcIlwiLFxuICAgICAgICBlbXBsb3ltZW50VHlwZTogcG9zdGluZz8uY2F0ZWdvcmllcz8uY29tbWl0bWVudCB8fCBcIlwiLFxuICAgICAgICBzb3VyY2U6IFwibGV2ZXJcIixcbiAgICAgICAgcG9zdGVkQXQ6IFwiXCJcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIFxuICAgIHJldHVybiBqb2JzO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoYExldmVyICR7c2x1Z30gZmV0Y2ggZXJyb3I6YCwgZXJyb3IubWVzc2FnZSk7XG4gICAgcmV0dXJuIFtdO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaExldmVyQWxsKHsgbGltaXQgPSBKT0JfRkVUQ0gucGVyU291cmNlTGltaXQgfSA9IHt9KSB7XG4gIGNvbnNvbGUubG9nKGBGZXRjaGluZyBMZXZlciBqb2JzIGZyb20gJHtMVi5sZW5ndGh9IGNvbXBhbmllcy4uLmApO1xuICBcbiAgY29uc3QgdGFza3MgPSBMVi5tYXAoc2x1ZyA9PiAoKSA9PiBmZXRjaExldmVyKHNsdWcsIHsgbGltaXQgfSkpO1xuICBjb25zdCByZXN1bHRzID0gYXdhaXQgbGltaXRDb25jdXJyZW5jeSh0YXNrcywgSk9CX0ZFVENILmNvbmN1cnJlbmN5KTtcbiAgXG4gIGNvbnN0IGFsbEpvYnMgPSByZXN1bHRzLmZsYXQoKS5maWx0ZXIoam9iID0+IGpvYiAmJiAham9iLmVycm9yKTtcbiAgY29uc29sZS5sb2coYExldmVyOiBGZXRjaGVkICR7YWxsSm9icy5sZW5ndGh9IGpvYnMgZnJvbSAke3Jlc3VsdHMuZmlsdGVyKHIgPT4gciAmJiByLmxlbmd0aCA+IDApLmxlbmd0aH0gY29tcGFuaWVzYCk7XG4gIFxuICByZXR1cm4gYWxsSm9icztcbn1cbiJdLCJuYW1lcyI6WyJiYWNrb2ZmRmV0Y2giLCJub3JtYWxpemVKb2IiLCJleHRyYWN0VGFncyIsImxpbWl0Q29uY3VycmVuY3kiLCJKT0JfRkVUQ0giLCJMRVZFUl9TTFVHUyIsIkxWIiwiZmV0Y2hMZXZlciIsInNsdWciLCJsaW1pdCIsInBlclNvdXJjZUxpbWl0IiwidXJsIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwicmVzcG9uc2UiLCJkYXRhIiwianNvbiIsIkFycmF5IiwiaXNBcnJheSIsImpvYnMiLCJzbGljZSIsIm1hcCIsInBvc3RpbmciLCJzdW1tYXJ5IiwibGlzdHMiLCJsIiwidGV4dCIsImpvaW4iLCJkZXNjcmlwdGlvbiIsInRhZ3MiLCJpZCIsInRpdGxlIiwiY29tcGFueSIsImNhdGVnb3JpZXMiLCJ0ZWFtIiwibG9jYXRpb24iLCJyZW1vdGUiLCJ0ZXN0IiwiSlNPTiIsInN0cmluZ2lmeSIsInRvTG93ZXJDYXNlIiwiaW5jbHVkZXMiLCJob3N0ZWRVcmwiLCJhcHBseVVybCIsImVtcGxveW1lbnRUeXBlIiwiY29tbWl0bWVudCIsInNvdXJjZSIsInBvc3RlZEF0IiwiZXJyb3IiLCJjb25zb2xlIiwibWVzc2FnZSIsImZldGNoTGV2ZXJBbGwiLCJsb2ciLCJsZW5ndGgiLCJ0YXNrcyIsInJlc3VsdHMiLCJjb25jdXJyZW5jeSIsImFsbEpvYnMiLCJmbGF0IiwiZmlsdGVyIiwiam9iIiwiciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/jobs/sources/lever.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/jobs/sources/remoteok.js":
/*!******************************************!*\
  !*** ./src/lib/jobs/sources/remoteok.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchRemoteOK: () => (/* binding */ fetchRemoteOK)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(rsc)/./src/lib/jobs/utils.js\");\n\nconst ENDPOINT = \"https://remoteok.com/api\";\nasync function fetchRemoteOK({ limit = _utils_js__WEBPACK_IMPORTED_MODULE_0__.JOB_FETCH.perSourceLimit } = {}) {\n    try {\n        console.log(\"Fetching RemoteOK jobs...\");\n        const response = await (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.backoffFetch)(ENDPOINT);\n        const data = await response.json();\n        if (!Array.isArray(data)) {\n            console.log(\"RemoteOK: No jobs found or invalid response\");\n            return [];\n        }\n        const jobs = data.filter((d)=>d?.id && d?.position && d?.company).slice(0, limit).map((d)=>{\n            const tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.extractTags)(d.description || \"\", d.tags || []);\n            return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.normalizeJob)({\n                id: `remoteok_${d.id}`,\n                title: d.position,\n                company: d.company,\n                location: d.location || (d?.remote ? \"Remote\" : \"\"),\n                remote: Boolean(d.remote) || String(d.location || \"\").toLowerCase().includes(\"remote\"),\n                tags: tags,\n                summary: d.description || \"\",\n                url: d.url || d.apply_url || d.slug || \"\",\n                employmentType: d.job_type || \"\",\n                source: \"remoteok\",\n                postedAt: d.date || \"\"\n            });\n        });\n        console.log(`RemoteOK: Fetched ${jobs.length} jobs`);\n        return jobs;\n    } catch (error) {\n        console.error(\"RemoteOK fetch error:\", error.message);\n        return [];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2pvYnMvc291cmNlcy9yZW1vdGVvay5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRjtBQUVqRixNQUFNSSxXQUFXO0FBRVYsZUFBZUMsY0FBYyxFQUFFQyxRQUFRSCxnREFBU0EsQ0FBQ0ksY0FBYyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQzNFLElBQUk7UUFDRkMsUUFBUUMsR0FBRyxDQUFDO1FBRVosTUFBTUMsV0FBVyxNQUFNVix1REFBWUEsQ0FBQ0k7UUFDcEMsTUFBTU8sT0FBTyxNQUFNRCxTQUFTRSxJQUFJO1FBRWhDLElBQUksQ0FBQ0MsTUFBTUMsT0FBTyxDQUFDSCxPQUFPO1lBQ3hCSCxRQUFRQyxHQUFHLENBQUM7WUFDWixPQUFPLEVBQUU7UUFDWDtRQUVBLE1BQU1NLE9BQU9KLEtBQ1ZLLE1BQU0sQ0FBQ0MsQ0FBQUEsSUFBS0EsR0FBR0MsTUFBTUQsR0FBR0UsWUFBWUYsR0FBR0csU0FDdkNDLEtBQUssQ0FBQyxHQUFHZixPQUNUZ0IsR0FBRyxDQUFDTCxDQUFBQTtZQUNILE1BQU1NLE9BQU9yQixzREFBV0EsQ0FBQ2UsRUFBRU8sV0FBVyxJQUFJLElBQUlQLEVBQUVNLElBQUksSUFBSSxFQUFFO1lBRTFELE9BQU90Qix1REFBWUEsQ0FBQztnQkFDbEJpQixJQUFJLENBQUMsU0FBUyxFQUFFRCxFQUFFQyxFQUFFLENBQUMsQ0FBQztnQkFDdEJPLE9BQU9SLEVBQUVFLFFBQVE7Z0JBQ2pCQyxTQUFTSCxFQUFFRyxPQUFPO2dCQUNsQk0sVUFBVVQsRUFBRVMsUUFBUSxJQUFLVCxDQUFBQSxHQUFHVSxTQUFTLFdBQVcsRUFBQztnQkFDakRBLFFBQVFDLFFBQVFYLEVBQUVVLE1BQU0sS0FBS0UsT0FBT1osRUFBRVMsUUFBUSxJQUFJLElBQUlJLFdBQVcsR0FBR0MsUUFBUSxDQUFDO2dCQUM3RVIsTUFBTUE7Z0JBQ05TLFNBQVNmLEVBQUVPLFdBQVcsSUFBSTtnQkFDMUJTLEtBQUtoQixFQUFFZ0IsR0FBRyxJQUFJaEIsRUFBRWlCLFNBQVMsSUFBSWpCLEVBQUVrQixJQUFJLElBQUk7Z0JBQ3ZDQyxnQkFBZ0JuQixFQUFFb0IsUUFBUSxJQUFJO2dCQUM5QkMsUUFBUTtnQkFDUkMsVUFBVXRCLEVBQUV1QixJQUFJLElBQUk7WUFDdEI7UUFDRjtRQUVGaEMsUUFBUUMsR0FBRyxDQUFDLENBQUMsa0JBQWtCLEVBQUVNLEtBQUswQixNQUFNLENBQUMsS0FBSyxDQUFDO1FBQ25ELE9BQU8xQjtJQUNULEVBQUUsT0FBTzJCLE9BQU87UUFDZGxDLFFBQVFrQyxLQUFLLENBQUMseUJBQXlCQSxNQUFNQyxPQUFPO1FBQ3BELE9BQU8sRUFBRTtJQUNYO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYXJlZXJib29zdC1uZXh0anMvLi9zcmMvbGliL2pvYnMvc291cmNlcy9yZW1vdGVvay5qcz8zMDJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhY2tvZmZGZXRjaCwgbm9ybWFsaXplSm9iLCBleHRyYWN0VGFncywgSk9CX0ZFVENIIH0gZnJvbSBcIi4uL3V0aWxzLmpzXCI7XG5cbmNvbnN0IEVORFBPSU5UID0gXCJodHRwczovL3JlbW90ZW9rLmNvbS9hcGlcIjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoUmVtb3RlT0soeyBsaW1pdCA9IEpPQl9GRVRDSC5wZXJTb3VyY2VMaW1pdCB9ID0ge30pIHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZyhcIkZldGNoaW5nIFJlbW90ZU9LIGpvYnMuLi5cIik7XG4gICAgXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBiYWNrb2ZmRmV0Y2goRU5EUE9JTlQpO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgXG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGRhdGEpKSB7XG4gICAgICBjb25zb2xlLmxvZyhcIlJlbW90ZU9LOiBObyBqb2JzIGZvdW5kIG9yIGludmFsaWQgcmVzcG9uc2VcIik7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IGpvYnMgPSBkYXRhXG4gICAgICAuZmlsdGVyKGQgPT4gZD8uaWQgJiYgZD8ucG9zaXRpb24gJiYgZD8uY29tcGFueSlcbiAgICAgIC5zbGljZSgwLCBsaW1pdClcbiAgICAgIC5tYXAoZCA9PiB7XG4gICAgICAgIGNvbnN0IHRhZ3MgPSBleHRyYWN0VGFncyhkLmRlc2NyaXB0aW9uIHx8IFwiXCIsIGQudGFncyB8fCBbXSk7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gbm9ybWFsaXplSm9iKHtcbiAgICAgICAgICBpZDogYHJlbW90ZW9rXyR7ZC5pZH1gLFxuICAgICAgICAgIHRpdGxlOiBkLnBvc2l0aW9uLFxuICAgICAgICAgIGNvbXBhbnk6IGQuY29tcGFueSxcbiAgICAgICAgICBsb2NhdGlvbjogZC5sb2NhdGlvbiB8fCAoZD8ucmVtb3RlID8gXCJSZW1vdGVcIiA6IFwiXCIpLFxuICAgICAgICAgIHJlbW90ZTogQm9vbGVhbihkLnJlbW90ZSkgfHwgU3RyaW5nKGQubG9jYXRpb24gfHwgXCJcIikudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhcInJlbW90ZVwiKSxcbiAgICAgICAgICB0YWdzOiB0YWdzLFxuICAgICAgICAgIHN1bW1hcnk6IGQuZGVzY3JpcHRpb24gfHwgXCJcIixcbiAgICAgICAgICB1cmw6IGQudXJsIHx8IGQuYXBwbHlfdXJsIHx8IGQuc2x1ZyB8fCBcIlwiLFxuICAgICAgICAgIGVtcGxveW1lbnRUeXBlOiBkLmpvYl90eXBlIHx8IFwiXCIsXG4gICAgICAgICAgc291cmNlOiBcInJlbW90ZW9rXCIsXG4gICAgICAgICAgcG9zdGVkQXQ6IGQuZGF0ZSB8fCBcIlwiXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgXG4gICAgY29uc29sZS5sb2coYFJlbW90ZU9LOiBGZXRjaGVkICR7am9icy5sZW5ndGh9IGpvYnNgKTtcbiAgICByZXR1cm4gam9icztcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiUmVtb3RlT0sgZmV0Y2ggZXJyb3I6XCIsIGVycm9yLm1lc3NhZ2UpO1xuICAgIHJldHVybiBbXTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbImJhY2tvZmZGZXRjaCIsIm5vcm1hbGl6ZUpvYiIsImV4dHJhY3RUYWdzIiwiSk9CX0ZFVENIIiwiRU5EUE9JTlQiLCJmZXRjaFJlbW90ZU9LIiwibGltaXQiLCJwZXJTb3VyY2VMaW1pdCIsImNvbnNvbGUiLCJsb2ciLCJyZXNwb25zZSIsImRhdGEiLCJqc29uIiwiQXJyYXkiLCJpc0FycmF5Iiwiam9icyIsImZpbHRlciIsImQiLCJpZCIsInBvc2l0aW9uIiwiY29tcGFueSIsInNsaWNlIiwibWFwIiwidGFncyIsImRlc2NyaXB0aW9uIiwidGl0bGUiLCJsb2NhdGlvbiIsInJlbW90ZSIsIkJvb2xlYW4iLCJTdHJpbmciLCJ0b0xvd2VyQ2FzZSIsImluY2x1ZGVzIiwic3VtbWFyeSIsInVybCIsImFwcGx5X3VybCIsInNsdWciLCJlbXBsb3ltZW50VHlwZSIsImpvYl90eXBlIiwic291cmNlIiwicG9zdGVkQXQiLCJkYXRlIiwibGVuZ3RoIiwiZXJyb3IiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/jobs/sources/remoteok.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/jobs/sources/remotive.js":
/*!******************************************!*\
  !*** ./src/lib/jobs/sources/remotive.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchRemotive: () => (/* binding */ fetchRemotive)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(rsc)/./src/lib/jobs/utils.js\");\n\nasync function fetchRemotive({ limit = _utils_js__WEBPACK_IMPORTED_MODULE_0__.JOB_FETCH.perSourceLimit } = {}) {\n    try {\n        console.log(\"Fetching Remotive jobs...\");\n        const response = await (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.backoffFetch)(\"https://remotive.com/api/remote-jobs\");\n        const data = await response.json();\n        if (!data || !Array.isArray(data.jobs)) {\n            console.log(\"Remotive: No jobs found or invalid response\");\n            return [];\n        }\n        const jobs = data.jobs.slice(0, limit).map((job)=>{\n            const tags = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.extractTags)(job.description, job.tags || []);\n            return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.normalizeJob)({\n                id: `remotive_${job.id}`,\n                title: job.title,\n                company: job.company_name,\n                location: job.candidate_required_location || \"Remote\",\n                remote: true,\n                tags: tags,\n                summary: job.description || \"\",\n                url: job.url || job.job_url || \"\",\n                employmentType: job.job_type || \"\",\n                source: \"remotive\",\n                postedAt: job.publication_date || \"\"\n            });\n        });\n        console.log(`Remotive: Fetched ${jobs.length} jobs`);\n        return jobs;\n    } catch (error) {\n        console.error(\"Remotive fetch error:\", error.message);\n        return [];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2pvYnMvc291cmNlcy9yZW1vdGl2ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRjtBQUUxRSxlQUFlSSxjQUFjLEVBQUVDLFFBQVFGLGdEQUFTQSxDQUFDRyxjQUFjLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDM0UsSUFBSTtRQUNGQyxRQUFRQyxHQUFHLENBQUM7UUFFWixNQUFNQyxXQUFXLE1BQU1ULHVEQUFZQSxDQUFDO1FBQ3BDLE1BQU1VLE9BQU8sTUFBTUQsU0FBU0UsSUFBSTtRQUVoQyxJQUFJLENBQUNELFFBQVEsQ0FBQ0UsTUFBTUMsT0FBTyxDQUFDSCxLQUFLSSxJQUFJLEdBQUc7WUFDdENQLFFBQVFDLEdBQUcsQ0FBQztZQUNaLE9BQU8sRUFBRTtRQUNYO1FBRUEsTUFBTU0sT0FBT0osS0FBS0ksSUFBSSxDQUFDQyxLQUFLLENBQUMsR0FBR1YsT0FBT1csR0FBRyxDQUFDQyxDQUFBQTtZQUN6QyxNQUFNQyxPQUFPaEIsc0RBQVdBLENBQUNlLElBQUlFLFdBQVcsRUFBRUYsSUFBSUMsSUFBSSxJQUFJLEVBQUU7WUFFeEQsT0FBT2pCLHVEQUFZQSxDQUFDO2dCQUNsQm1CLElBQUksQ0FBQyxTQUFTLEVBQUVILElBQUlHLEVBQUUsQ0FBQyxDQUFDO2dCQUN4QkMsT0FBT0osSUFBSUksS0FBSztnQkFDaEJDLFNBQVNMLElBQUlNLFlBQVk7Z0JBQ3pCQyxVQUFVUCxJQUFJUSwyQkFBMkIsSUFBSTtnQkFDN0NDLFFBQVE7Z0JBQ1JSLE1BQU1BO2dCQUNOUyxTQUFTVixJQUFJRSxXQUFXLElBQUk7Z0JBQzVCUyxLQUFLWCxJQUFJVyxHQUFHLElBQUlYLElBQUlZLE9BQU8sSUFBSTtnQkFDL0JDLGdCQUFnQmIsSUFBSWMsUUFBUSxJQUFJO2dCQUNoQ0MsUUFBUTtnQkFDUkMsVUFBVWhCLElBQUlpQixnQkFBZ0IsSUFBSTtZQUNwQztRQUNGO1FBRUEzQixRQUFRQyxHQUFHLENBQUMsQ0FBQyxrQkFBa0IsRUFBRU0sS0FBS3FCLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDbkQsT0FBT3JCO0lBQ1QsRUFBRSxPQUFPc0IsT0FBTztRQUNkN0IsUUFBUTZCLEtBQUssQ0FBQyx5QkFBeUJBLE1BQU1DLE9BQU87UUFDcEQsT0FBTyxFQUFFO0lBQ1g7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NhcmVlcmJvb3N0LW5leHRqcy8uL3NyYy9saWIvam9icy9zb3VyY2VzL3JlbW90aXZlLmpzPzdkM2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFja29mZkZldGNoLCBub3JtYWxpemVKb2IsIGV4dHJhY3RUYWdzLCBKT0JfRkVUQ0ggfSBmcm9tIFwiLi4vdXRpbHMuanNcIjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoUmVtb3RpdmUoeyBsaW1pdCA9IEpPQl9GRVRDSC5wZXJTb3VyY2VMaW1pdCB9ID0ge30pIHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZyhcIkZldGNoaW5nIFJlbW90aXZlIGpvYnMuLi5cIik7XG4gICAgXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBiYWNrb2ZmRmV0Y2goXCJodHRwczovL3JlbW90aXZlLmNvbS9hcGkvcmVtb3RlLWpvYnNcIik7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICBcbiAgICBpZiAoIWRhdGEgfHwgIUFycmF5LmlzQXJyYXkoZGF0YS5qb2JzKSkge1xuICAgICAgY29uc29sZS5sb2coXCJSZW1vdGl2ZTogTm8gam9icyBmb3VuZCBvciBpbnZhbGlkIHJlc3BvbnNlXCIpO1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBqb2JzID0gZGF0YS5qb2JzLnNsaWNlKDAsIGxpbWl0KS5tYXAoam9iID0+IHtcbiAgICAgIGNvbnN0IHRhZ3MgPSBleHRyYWN0VGFncyhqb2IuZGVzY3JpcHRpb24sIGpvYi50YWdzIHx8IFtdKTtcbiAgICAgIFxuICAgICAgcmV0dXJuIG5vcm1hbGl6ZUpvYih7XG4gICAgICAgIGlkOiBgcmVtb3RpdmVfJHtqb2IuaWR9YCxcbiAgICAgICAgdGl0bGU6IGpvYi50aXRsZSxcbiAgICAgICAgY29tcGFueTogam9iLmNvbXBhbnlfbmFtZSxcbiAgICAgICAgbG9jYXRpb246IGpvYi5jYW5kaWRhdGVfcmVxdWlyZWRfbG9jYXRpb24gfHwgXCJSZW1vdGVcIixcbiAgICAgICAgcmVtb3RlOiB0cnVlLCAvLyBSZW1vdGl2ZSBpcyByZW1vdGUtZm9jdXNlZFxuICAgICAgICB0YWdzOiB0YWdzLFxuICAgICAgICBzdW1tYXJ5OiBqb2IuZGVzY3JpcHRpb24gfHwgXCJcIixcbiAgICAgICAgdXJsOiBqb2IudXJsIHx8IGpvYi5qb2JfdXJsIHx8IFwiXCIsXG4gICAgICAgIGVtcGxveW1lbnRUeXBlOiBqb2Iuam9iX3R5cGUgfHwgXCJcIixcbiAgICAgICAgc291cmNlOiBcInJlbW90aXZlXCIsXG4gICAgICAgIHBvc3RlZEF0OiBqb2IucHVibGljYXRpb25fZGF0ZSB8fCBcIlwiXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBcbiAgICBjb25zb2xlLmxvZyhgUmVtb3RpdmU6IEZldGNoZWQgJHtqb2JzLmxlbmd0aH0gam9ic2ApO1xuICAgIHJldHVybiBqb2JzO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJSZW1vdGl2ZSBmZXRjaCBlcnJvcjpcIiwgZXJyb3IubWVzc2FnZSk7XG4gICAgcmV0dXJuIFtdO1xuICB9XG59XG4iXSwibmFtZXMiOlsiYmFja29mZkZldGNoIiwibm9ybWFsaXplSm9iIiwiZXh0cmFjdFRhZ3MiLCJKT0JfRkVUQ0giLCJmZXRjaFJlbW90aXZlIiwibGltaXQiLCJwZXJTb3VyY2VMaW1pdCIsImNvbnNvbGUiLCJsb2ciLCJyZXNwb25zZSIsImRhdGEiLCJqc29uIiwiQXJyYXkiLCJpc0FycmF5Iiwiam9icyIsInNsaWNlIiwibWFwIiwiam9iIiwidGFncyIsImRlc2NyaXB0aW9uIiwiaWQiLCJ0aXRsZSIsImNvbXBhbnkiLCJjb21wYW55X25hbWUiLCJsb2NhdGlvbiIsImNhbmRpZGF0ZV9yZXF1aXJlZF9sb2NhdGlvbiIsInJlbW90ZSIsInN1bW1hcnkiLCJ1cmwiLCJqb2JfdXJsIiwiZW1wbG95bWVudFR5cGUiLCJqb2JfdHlwZSIsInNvdXJjZSIsInBvc3RlZEF0IiwicHVibGljYXRpb25fZGF0ZSIsImxlbmd0aCIsImVycm9yIiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/jobs/sources/remotive.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/jobs/utils.js":
/*!*******************************!*\
  !*** ./src/lib/jobs/utils.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JOB_FETCH: () => (/* reexport safe */ _config_js__WEBPACK_IMPORTED_MODULE_0__.JOB_FETCH),\n/* harmony export */   backoffFetch: () => (/* binding */ backoffFetch),\n/* harmony export */   dedupe: () => (/* binding */ dedupe),\n/* harmony export */   extractTags: () => (/* binding */ extractTags),\n/* harmony export */   limitConcurrency: () => (/* binding */ limitConcurrency),\n/* harmony export */   mkId: () => (/* binding */ mkId),\n/* harmony export */   normalizeJob: () => (/* binding */ normalizeJob),\n/* harmony export */   stripHtml: () => (/* binding */ stripHtml),\n/* harmony export */   tokenize: () => (/* binding */ tokenize),\n/* harmony export */   unique: () => (/* binding */ unique)\n/* harmony export */ });\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.js */ \"(rsc)/./src/lib/jobs/config.js\");\n\n// Re-export JOB_FETCH for convenience\n\n// HTML stripping\nconst stripHtml = (html = \"\")=>{\n    return html.replace(/<[^>]*>/g, \" \").replace(/\\s+/g, \" \").trim();\n};\n// Text tokenization\nconst tokenize = (text = \"\")=>{\n    return text.toLowerCase().replace(/[^a-z0-9+.#/\\- ]+/g, \" \").split(/\\s+/).filter(Boolean);\n};\n// Unique array\nconst unique = (arr = [])=>Array.from(new Set(arr));\n// Generate job ID\nconst mkId = (prefix, value)=>{\n    return `${prefix}_${Buffer.from(String(value)).toString(\"base64\").slice(0, 24)}`;\n};\n// Normalize job data\nconst normalizeJob = (raw)=>{\n    const location = String(raw.location || \"\").trim();\n    const isRemote = location.toLowerCase().includes(\"remote\") || location.toLowerCase().includes(\"anywhere\") || location.toLowerCase().includes(\"global\") || Boolean(raw.remote);\n    return {\n        id: String(raw.id || mkId(\"job\", raw.url || Math.random())),\n        title: String(raw.title || \"\").trim(),\n        company: String(raw.company || \"\").trim(),\n        location: location,\n        remote: isRemote,\n        tags: unique((raw.tags || []).map((t)=>String(t).trim()).filter(Boolean)),\n        summary: stripHtml(String(raw.summary || raw.description || \"\")),\n        url: String(raw.url || \"\"),\n        employmentType: String(raw.employmentType || \"\"),\n        source: String(raw.source || \"\"),\n        postedAt: String(raw.postedAt || \"\")\n    };\n};\n// Deduplicate jobs\nconst dedupe = (jobs)=>{\n    const seen = new Map();\n    const urlSeen = new Set();\n    for (const job of jobs){\n        // Skip exact URL duplicates\n        if (urlSeen.has(job.url.toLowerCase())) continue;\n        urlSeen.add(job.url.toLowerCase());\n        // Use company::title::location as dedupe key\n        const key = `${(job.company || \"\").toLowerCase()}::${(job.title || \"\").toLowerCase()}::${(job.location || \"\").toLowerCase()}`;\n        if (!seen.has(key)) {\n            seen.set(key, job);\n        }\n    }\n    return Array.from(seen.values());\n};\n// Exponential backoff with jitter\nconst getBackoffDelay = (attempt)=>{\n    const baseDelay = _config_js__WEBPACK_IMPORTED_MODULE_0__.JOB_FETCH.backoffBaseMs * Math.pow(2, attempt);\n    const jitter = Math.random() * 0.1 * baseDelay;\n    return Math.min(baseDelay + jitter, _config_js__WEBPACK_IMPORTED_MODULE_0__.JOB_FETCH.backoffMaxMs);\n};\n// Backoff fetch with retries\nconst backoffFetch = async (url, options = {})=>{\n    let lastError;\n    for(let attempt = 0; attempt <= _config_js__WEBPACK_IMPORTED_MODULE_0__.JOB_FETCH.maxRetries; attempt++){\n        try {\n            const controller = new AbortController();\n            const timeoutId = setTimeout(()=>controller.abort(), _config_js__WEBPACK_IMPORTED_MODULE_0__.JOB_FETCH.timeoutMs);\n            const response = await fetch(url, {\n                ...options,\n                headers: {\n                    \"User-Agent\": _config_js__WEBPACK_IMPORTED_MODULE_0__.JOB_FETCH.userAgent,\n                    ...options.headers\n                },\n                signal: controller.signal\n            });\n            clearTimeout(timeoutId);\n            if (response.status === 429 || response.status >= 500) {\n                throw new Error(`HTTP ${response.status}`);\n            }\n            return response;\n        } catch (error) {\n            lastError = error;\n            if (attempt === _config_js__WEBPACK_IMPORTED_MODULE_0__.JOB_FETCH.maxRetries) {\n                throw error;\n            }\n            const delay = getBackoffDelay(attempt);\n            await new Promise((resolve)=>setTimeout(resolve, delay));\n        }\n    }\n    throw lastError;\n};\n// Concurrency limiter\nconst limitConcurrency = (tasks, concurrency)=>{\n    const results = [];\n    const executing = new Set();\n    return new Promise((resolve, reject)=>{\n        let index = 0;\n        const runTask = async ()=>{\n            if (index >= tasks.length) {\n                if (executing.size === 0) {\n                    resolve(results);\n                }\n                return;\n            }\n            const taskIndex = index++;\n            const task = tasks[taskIndex];\n            executing.add(taskIndex);\n            try {\n                const result = await task();\n                results[taskIndex] = result;\n            } catch (error) {\n                results[taskIndex] = {\n                    error\n                };\n            } finally{\n                executing.delete(taskIndex);\n                runTask();\n            }\n        };\n        // Start initial tasks\n        for(let i = 0; i < Math.min(concurrency, tasks.length); i++){\n            runTask();\n        }\n    });\n};\n// Extract tags from description\nconst extractTags = (description, existingTags = [])=>{\n    const text = stripHtml(description).toLowerCase();\n    const commonTech = [\n        \"javascript\",\n        \"typescript\",\n        \"react\",\n        \"vue\",\n        \"angular\",\n        \"node\",\n        \"python\",\n        \"java\",\n        \"go\",\n        \"rust\",\n        \"aws\",\n        \"azure\",\n        \"gcp\",\n        \"docker\",\n        \"kubernetes\",\n        \"postgres\",\n        \"mysql\",\n        \"mongodb\",\n        \"redis\",\n        \"graphql\",\n        \"rest\",\n        \"api\",\n        \"microservices\",\n        \"serverless\",\n        \"ci/cd\",\n        \"git\",\n        \"agile\",\n        \"scrum\",\n        \"machine learning\",\n        \"ai\",\n        \"data science\",\n        \"devops\",\n        \"frontend\",\n        \"backend\",\n        \"full stack\",\n        \"mobile\",\n        \"ios\",\n        \"android\",\n        \"flutter\",\n        \"react native\",\n        \"cloud\",\n        \"saas\",\n        \"startup\"\n    ];\n    const found = commonTech.filter((tech)=>text.includes(tech));\n    const allTags = [\n        ...existingTags,\n        ...found\n    ];\n    return unique(allTags).slice(0, 12);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/jobs/utils.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/redis.js":
/*!**************************!*\
  !*** ./src/lib/redis.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cacheGet: () => (/* binding */ cacheGet),\n/* harmony export */   cacheSet: () => (/* binding */ cacheSet),\n/* harmony export */   idemCheck: () => (/* binding */ idemCheck),\n/* harmony export */   rateLimit: () => (/* binding */ rateLimit),\n/* harmony export */   redis: () => (/* binding */ redis)\n/* harmony export */ });\n/* harmony import */ var _upstash_redis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @upstash/redis */ \"(rsc)/./node_modules/@upstash/redis/nodejs.mjs\");\n\nconst redis = process.env.UPSTASH_REDIS_REST_URL && process.env.UPSTASH_REDIS_REST_TOKEN && !process.env.UPSTASH_REDIS_REST_URL.includes(\"your-redis-url\") ? new _upstash_redis__WEBPACK_IMPORTED_MODULE_0__.Redis({\n    url: process.env.UPSTASH_REDIS_REST_URL,\n    token: process.env.UPSTASH_REDIS_REST_TOKEN\n}) : null;\nasync function cacheGet(k) {\n    if (!redis) return null;\n    return await redis.get(k);\n}\nasync function cacheSet(k, v, ttl) {\n    if (!redis) return;\n    await redis.set(k, v, {\n        ex: ttl\n    });\n}\nasync function rateLimit(key, limit = 180, windowSec = 60) {\n    if (!redis) return true;\n    const bucket = `rl:${key}:${Math.floor(Date.now() / (windowSec * 1000))}`;\n    const c = await redis.incr(bucket);\n    if (c === 1) await redis.expire(bucket, windowSec);\n    return c <= limit;\n}\nasync function idemCheck(key, ttl = 3600) {\n    if (!redis) return false;\n    const ok = await redis.set(`idem:${key}`, \"1\", {\n        nx: true,\n        ex: ttl\n    });\n    return ok === \"OK\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3JlZGlzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF1QztBQUNoQyxNQUFNQyxRQUFRLFFBQVNFLEdBQUcsQ0FBQ0Msc0JBQXNCLElBQUlGLFFBQVFDLEdBQUcsQ0FBQ0Usd0JBQXdCLElBQUksQ0FBQ0gsUUFBUUMsR0FBRyxDQUFDQyxzQkFBc0IsQ0FBQ0UsUUFBUSxDQUFDLG9CQUM3SSxJQUFJTixpREFBS0EsQ0FBQztJQUFFTyxLQUFLTCxRQUFRQyxHQUFHLENBQUNDLHNCQUFzQjtJQUFFSSxPQUFPTixRQUFRQyxHQUFHLENBQUNFLHdCQUF3QjtBQUFDLEtBQ2pHLEtBQUs7QUFFRixlQUFlSSxTQUFTQyxDQUFDO0lBQUcsSUFBRyxDQUFDVCxPQUFPLE9BQU87SUFBTSxPQUFPLE1BQU1BLE1BQU1VLEdBQUcsQ0FBQ0Q7QUFBSTtBQUMvRSxlQUFlRSxTQUFTRixDQUFDLEVBQUNHLENBQUMsRUFBQ0MsR0FBRztJQUFHLElBQUcsQ0FBQ2IsT0FBTztJQUFRLE1BQU1BLE1BQU1jLEdBQUcsQ0FBQ0wsR0FBRUcsR0FBRTtRQUFFRyxJQUFJRjtJQUFJO0FBQUk7QUFDdkYsZUFBZUcsVUFBVUMsR0FBRyxFQUFFQyxRQUFNLEdBQUcsRUFBRUMsWUFBVSxFQUFFO0lBQzFELElBQUcsQ0FBQ25CLE9BQU8sT0FBTztJQUNsQixNQUFNb0IsU0FBUyxDQUFDLEdBQUcsRUFBRUgsSUFBSSxDQUFDLEVBQUVJLEtBQUtDLEtBQUssQ0FBQ0MsS0FBS0MsR0FBRyxLQUFJTCxDQUFBQSxZQUFVLElBQUcsR0FBSSxDQUFDO0lBQ3JFLE1BQU1NLElBQUksTUFBTXpCLE1BQU0wQixJQUFJLENBQUNOO0lBQzNCLElBQUdLLE1BQUksR0FBRyxNQUFNekIsTUFBTTJCLE1BQU0sQ0FBQ1AsUUFBUUQ7SUFDckMsT0FBT00sS0FBS1A7QUFDZDtBQUNPLGVBQWVVLFVBQVVYLEdBQUcsRUFBRUosTUFBSSxJQUFJO0lBQUcsSUFBRyxDQUFDYixPQUFPLE9BQU87SUFBTyxNQUFNNkIsS0FBSyxNQUFNN0IsTUFBTWMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFRyxJQUFJLENBQUMsRUFBQyxLQUFJO1FBQUVhLElBQUc7UUFBTWYsSUFBSUY7SUFBSTtJQUFJLE9BQU9nQixPQUFPO0FBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYXJlZXJib29zdC1uZXh0anMvLi9zcmMvbGliL3JlZGlzLmpzP2MxNGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVkaXMgfSBmcm9tIFwiQHVwc3Rhc2gvcmVkaXNcIjtcbmV4cG9ydCBjb25zdCByZWRpcyA9IChwcm9jZXNzLmVudi5VUFNUQVNIX1JFRElTX1JFU1RfVVJMICYmIHByb2Nlc3MuZW52LlVQU1RBU0hfUkVESVNfUkVTVF9UT0tFTiAmJiAhcHJvY2Vzcy5lbnYuVVBTVEFTSF9SRURJU19SRVNUX1VSTC5pbmNsdWRlcygneW91ci1yZWRpcy11cmwnKSlcbiAgPyBuZXcgUmVkaXMoeyB1cmw6IHByb2Nlc3MuZW52LlVQU1RBU0hfUkVESVNfUkVTVF9VUkwsIHRva2VuOiBwcm9jZXNzLmVudi5VUFNUQVNIX1JFRElTX1JFU1RfVE9LRU4gfSlcbiAgOiBudWxsO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY2FjaGVHZXQoayl7IGlmKCFyZWRpcykgcmV0dXJuIG51bGw7IHJldHVybiBhd2FpdCByZWRpcy5nZXQoayk7IH1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjYWNoZVNldChrLHYsdHRsKXsgaWYoIXJlZGlzKSByZXR1cm47IGF3YWl0IHJlZGlzLnNldChrLHYseyBleDogdHRsIH0pOyB9XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmF0ZUxpbWl0KGtleSwgbGltaXQ9MTgwLCB3aW5kb3dTZWM9NjApe1xuICBpZighcmVkaXMpIHJldHVybiB0cnVlO1xuICBjb25zdCBidWNrZXQgPSBgcmw6JHtrZXl9OiR7TWF0aC5mbG9vcihEYXRlLm5vdygpLyh3aW5kb3dTZWMqMTAwMCkpfWA7XG4gIGNvbnN0IGMgPSBhd2FpdCByZWRpcy5pbmNyKGJ1Y2tldCk7XG4gIGlmKGM9PT0xKSBhd2FpdCByZWRpcy5leHBpcmUoYnVja2V0LCB3aW5kb3dTZWMpO1xuICByZXR1cm4gYyA8PSBsaW1pdDtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpZGVtQ2hlY2soa2V5LCB0dGw9MzYwMCl7IGlmKCFyZWRpcykgcmV0dXJuIGZhbHNlOyBjb25zdCBvayA9IGF3YWl0IHJlZGlzLnNldChgaWRlbToke2tleX1gLFwiMVwiLHsgbng6dHJ1ZSwgZXg6IHR0bCB9KTsgcmV0dXJuIG9rID09PSBcIk9LXCI7IH1cbiJdLCJuYW1lcyI6WyJSZWRpcyIsInJlZGlzIiwicHJvY2VzcyIsImVudiIsIlVQU1RBU0hfUkVESVNfUkVTVF9VUkwiLCJVUFNUQVNIX1JFRElTX1JFU1RfVE9LRU4iLCJpbmNsdWRlcyIsInVybCIsInRva2VuIiwiY2FjaGVHZXQiLCJrIiwiZ2V0IiwiY2FjaGVTZXQiLCJ2IiwidHRsIiwic2V0IiwiZXgiLCJyYXRlTGltaXQiLCJrZXkiLCJsaW1pdCIsIndpbmRvd1NlYyIsImJ1Y2tldCIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJub3ciLCJjIiwiaW5jciIsImV4cGlyZSIsImlkZW1DaGVjayIsIm9rIiwibngiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/redis.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@upstash","vendor-chunks/uncrypto"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fjobs%2Froute&page=%2Fapi%2Fjobs%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fjobs%2Froute.js&appDir=%2FUsers%2Frohanramachandruni%2Fresumebuilder%2Fskill-job-resume%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Frohanramachandruni%2Fresumebuilder%2Fskill-job-resume&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();